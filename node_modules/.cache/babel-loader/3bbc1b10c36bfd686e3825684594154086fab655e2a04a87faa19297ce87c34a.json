{"ast":null,"code":"import _objectSpread from\"/home/erbulan/booking/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/home/erbulan/booking/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/erbulan/booking/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/erbulan/booking/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{useForm}from\"react-hook-form\";import{useNavigate}from\"react-router-dom\";import{useDispatch,useSelector}from\"react-redux\";import{setData}from\"../../../../store/slices/ReservationTheoryData\";import UserDataView from\"../../UserDataView/UserDataView\";import ModalLoading from\"../../ModalLoading/ModalLoading\";import{setDataUser}from\"../../../../store/slices/userDataSlice\";import{useTranslation}from\"react-i18next\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PracticeExamForm=function PracticeExamForm(){var _dateList$,_dateList;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),availableDates=_useState2[0],setAvailableDates=_useState2[1];// ...\nvar fetchAvailableDates=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var url,iin,token,response,data,availableDatesWithTime;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:url=\"/api/practice/free/exams/\";iin=sessionStorage.getItem(\"iin\").replace(/[^0-9]/g,\"\");token=userData.token;_context.prev=3;_context.next=6;return fetch(url,{headers:{Authorization:\"Bearer \"+token,\"Content-Type\":\"application/json\"},method:\"POST\",body:JSON.stringify({\"iin\":iin,\"department_id\":departmentId,\"category\":category})});case 6:response=_context.sent;if(!response.ok){_context.next=15;break;}_context.next=10;return response.json();case 10:data=_context.sent;availableDatesWithTime=data.map(function(item){return item.date;});setAvailableDates(availableDatesWithTime);_context.next=16;break;case 15:throw new Error(\"Request failed with status code \".concat(response.status));case 16:_context.next=21;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](3);console.error(\"Error fetching available dates:\",_context.t0);case 21:case\"end\":return _context.stop();}},_callee,null,[[3,18]]);}));return function fetchAvailableDates(){return _ref.apply(this,arguments);};}();var isDateDisabled=function isDateDisabled(date){return!availableDates.includes(date);};var _useTranslation=useTranslation(),t=_useTranslation.t;//LOADING ANIMATION\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];//SET TODAY DATE FOR DATEPICKER\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),today=_useState6[0],setToday=_useState6[1];//IF DATE IN THIS DAY NOT EXAMS\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),dateError=_useState8[0],setDateError=_useState8[1];// DATE FREE EXAM LIST FOR PRACTICE\nvar _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),dateList=_useState10[0],setDateList=_useState10[1];// APPLICANT SELECTED DATE\nvar _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),date=_useState12[0],setDate=_useState12[1];//APPLICANT SELECTED TIME\nvar _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),time=_useState14[0],setTime=_useState14[1];//SET EXAMID\nvar _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),examId=_useState16[0],setExamId=_useState16[1];//SELECTED KPP IF APPLICANT HAVE CATEGORY \"B\"\nvar _useState17=useState(\"MT\"),_useState18=_slicedToArray(_useState17,2),kppApp=_useState18[0],setKPP=_useState18[1];//SET ERROR WHEN SEND DATA AND TIME FOR RESERVATION\nvar _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),errorText=_useState20[0],setErrorText=_useState20[1];//SHOW ERROR IF APPLICANT NOT PASS THEORY EXAM\nvar _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),notTheoryExam=_useState22[0],setNotTheoryExam=_useState22[1];var dispatch=useDispatch();var navigate=useNavigate();//GET APPLICANT INFO FROM REDUX\nvar userData=useSelector(function(state){return state.userData.userData;});//NEW MENUS\nvar _useState23=useState([]),_useState24=_slicedToArray(_useState23,2),cities=_useState24[0],setCities=_useState24[1];var _useState25=useState([]),_useState26=_slicedToArray(_useState25,2),departments=_useState26[0],setDepartments=_useState26[1];var categories=['A1','B1','A','B','C1','C','D1','D','BE','C1E','CE','D1E','DE'];var _useState27=useState(userData.department_id),_useState28=_slicedToArray(_useState27,2),departmentId=_useState28[0],setDepartmentId=_useState28[1];var _useState29=useState(userData.category),_useState30=_slicedToArray(_useState29,2),category=_useState30[0],setCategory=_useState30[1];var _useState31=useState(userData.city),_useState32=_slicedToArray(_useState31,2),city=_useState32[0],setCity=_useState32[1];var _useState33=useState(false),_useState34=_slicedToArray(_useState33,2),dateBlock=_useState34[0],setDateBlock=_useState34[1];var _useState35=useState(userData.address),_useState36=_slicedToArray(_useState35,2),address=_useState36[0],setAddress=_useState36[1];var _useForm=useForm({selectCity:\"\",selectAddress:\"\",selectDate:\"\",IIN:\"\",mode:\"onChange\"}),register=_useForm.register,handleSubmit=_useForm.handleSubmit,reset=_useForm.reset,errors=_useForm.formState.errors;//SELECT CITY\nvar onChangeCity=function onChangeCity(value){setCity(value);var filteredDepartments=departments.filter(function(department){return department.city==value;});if(filteredDepartments.length>0){setDepartmentId(filteredDepartments[0].id);}};//SELECT DEPARTMENT\nvar onChangeSelectDepartment=function onChangeSelectDepartment(value){setDepartmentId(value);};//SELECT CATEGORY\nvar onChangeSelectCategory=function onChangeSelectCategory(value){setCategory(value);};//SELECT KPP\nvar onChangeSelectKPP=function onChangeSelectKPP(value){setKPP(value);// Вызов функции getFreeExamPractice при выборе опции селектора \"AT\" или \"MT\"\n// if (value === \"AT\" || value === \"MT\") {\n//   getFreeExamPractice(value);\n// }\n};//SHOW SELECTORS OF DATE AND TIME\nvar dateButtonClick=function dateButtonClick(){setDateBlock(true);getFreeExamPractice(kppApp);document.getElementById('category-select').disabled=true;document.getElementById('city-select').disabled=true;document.getElementById('department-select').disabled=true;document.getElementById('chooseDateBtn').style.display='none';document.getElementById('kpp-select').disabled=true;};//SELECT DATE\nvar onChangeSelectDate=function onChangeSelectDate(value){setDate(value);var sortedTime=dateList.filter(function(item){return item.date.includes(value);});dispatch(setData(sortedTime));setTime(sortedTime);};//SELECT TIME\nvar onChangeSelectTime=function onChangeSelectTime(value){var _obj$,_obj$2,_obj$3;var obj=time.filter(function(item){return item.time.includes(value);});var timeObj={date:(_obj$=obj[0])===null||_obj$===void 0?void 0:_obj$.date,time:(_obj$2=obj[0])===null||_obj$2===void 0?void 0:_obj$2.time};var obj1=sessionStorage.getItem(\"date\");if(obj1===null){sessionStorage.setItem(\"date\",JSON.stringify(timeObj));}else{sessionStorage.setItem(\"date\",JSON.stringify(timeObj));}setExamId((_obj$3=obj[0])===null||_obj$3===void 0?void 0:_obj$3.id);};//APPLICANT SELECTED DATE AND TIME SEND DATA\nvar handleSubmitPracticeExam=function handleSubmitPracticeExam(){var obj={user_id:userData.id,exam_id:examId,department_id:departmentId,category:category,kpp:kppApp};postUserExamData(obj);setLoading(true);sessionStorage.setItem(\"examId\",JSON.stringify(examId));sessionStorage.setItem(\"kpp\",JSON.stringify(kppApp));sessionStorage.setItem(\"category\",JSON.stringify(category));var department=departments.find(function(department){return department.id==departmentId;});sessionStorage.setItem(\"department\",JSON.stringify(department.name));sessionStorage.setItem(\"address\",JSON.stringify(department.address));//LOADING ANIMATE\nsetTimeout(function(){setLoading(false);},500);reset();};//fetches\n// ===========NEW DROPDOWN MENU FUNCTIONS========================\n//GET CITIES\nvar fetchCities=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var url,token,response,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:url=\"/api/cities/\";token=userData.token;_context2.next=4;return fetch(url,{headers:{Authorization:\"Bearer \"+token,\"Content-Type\":\"application/json\"}});case 4:response=_context2.sent;_context2.next=7;return response.json();case 7:data=_context2.sent;setCities(data);case 9:case\"end\":return _context2.stop();}},_callee2);}));return function fetchCities(){return _ref2.apply(this,arguments);};}();// //GET DEPARTMENTS\nvar fetchDepartments=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var url,token,response,data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:url=\"/api/departments/\";token=userData.token;_context3.next=4;return fetch(url,{headers:{Authorization:\"Bearer \"+token,\"Content-Type\":\"application/json\"}});case 4:response=_context3.sent;_context3.next=7;return response.json();case 7:data=_context3.sent;setDepartments(data);case 9:case\"end\":return _context3.stop();}},_callee3);}));return function fetchDepartments(){return _ref3.apply(this,arguments);};}();//GET FREE PRACTICE EXAM\nvar getFreeExamPractice=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(kpp){var url,iin,token;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:url=\"/api/practice/free/exams/\";iin=sessionStorage.getItem(\"iin\").replace(/[^0-9]/g,\"\");token=userData.token;fetch(url,{headers:{Authorization:\"Bearer \"+token,\"Content-Type\":\"application/json\"},method:\"POST\",body:JSON.stringify({\"iin\":iin,\"department_id\":departmentId,\"category\":category,\"kpp\":kpp})}).then(function(response){if(response.ok){return response.json();}else{throw new Error(\"Request failed with status code \".concat(response.status));}}).then(function(data){if(data.length===0){setDateError(true);setDateList(data);}else{setDateError(false);setDateList(data);}}).catch(function(res){});case 4:case\"end\":return _context4.stop();}},_callee4);}));return function getFreeExamPractice(_x){return _ref4.apply(this,arguments);};}();//POST DATA TO SERVER AFTER CHOISE APPLICANT DATE AND TIME\n// const postUserExamData = (user_exam_data) => {\n//   const url = \"/api/practice/enroll/queue/\";\n//   const token = userData.token;\n//   fetch(url, {\n//     headers: {\n//       Authorization: \"Bearer \" + token,\n//       \"Content-Type\": \"application/json\",\n//     },\n//     method: \"POST\",\n//     body: JSON.stringify(user_exam_data),\n//   })\n//     .then((response) => {\n//       if (response.ok) {\n//         return response.json();\n//       } else {\n//         setErrorText(response.status);\n//         throw new Error(`Request failed with status code ${response.status}`);\n//       }\n//     })\n//     .then((res) => {\n//       //IF APPLICANT ENROLLED TO PRACTICE EXAM\n//       if (res.enrolled) {\n//         sessionStorage.setItem(\"appNumber\", JSON.stringify(res.app_number));\n//         // navigate(\"/reservation/practice-exam/ticket\");\n//         navigate(\"/reservation/practice-exam/verification\");\n//       }\n//       //APPLICANT NOT ENRLLED GET ERROR FROM SERVER\n//       else if (res.error) {\n//         setNotTheoryExam(res.error);\n//       }\n//     })\n//     .catch(function (res) {\n//       setErrorText(res);\n//     });\n// };\nvar postUserExamData=function postUserExamData(user_exam_data){navigate(\"/reservation/practice-exam/verification\");};useEffect(function(){var todayDate=new Date().toISOString().slice(0,10);setToday(todayDate);//getFreeExamPractice(userData.department_code, token.access);\nif(userData.category!=='B'){onChangeSelectKPP(\"MT\");}// Fetching data for dropdowns // NEW MENU FUNCTIONS\nfetchCities();fetchDepartments();fetchAvailableDates();// Fetch available dates here\n},[]);//END OF NEW MENU FUNCTIONS\n//HTML\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"form_input_date_item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"d-flex align-items-start justify-content-center form-control my-4 \",children:/*#__PURE__*/_jsx(UserDataView,{})}),/*#__PURE__*/_jsx(\"h2\",{children:errorText}),notTheoryExam.length!==0?/*#__PURE__*/_jsx(\"h2\",{children:notTheoryExam}):null,/*#__PURE__*/_jsxs(\"form\",{className:\"fs-5\",onSubmit:handleSubmit(handleSubmitPracticeExam),children:[/*#__PURE__*/_jsxs(\"div\",{class:\"form-group mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"city-select\",children:t(\"selectCity\")}),/*#__PURE__*/_jsx(\"select\",{class:\"form-select\",id:\"city-select\",onChange:function onChange(e){return onChangeCity(e.target.value);},children:cities.map(function(city){return/*#__PURE__*/_jsx(\"option\",{value:city.id,selected:city.name==userData.city,children:city.name},city.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"form-group mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"department-select\",children:t(\"selectDepartment\")}),/*#__PURE__*/_jsxs(\"select\",{class:\"form-select\",id:\"department-select\",onChange:function onChange(e){return onChangeSelectDepartment(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{selected:true,disabled:true,value:\"\",children:t(\"selectDepartment\")}),departments.filter(function(department){return department.city==document.getElementById('city-select').value;}).map(function(department){return/*#__PURE__*/_jsx(\"option\",{value:department.id/*selected={department.id == userData.department_id}*/,children:department.name},department.id);})]})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"form-group mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"category-select\",className:\"fs-5\",children:t(\"selectCategory\")}),/*#__PURE__*/_jsx(\"select\",_objectSpread(_objectSpread({class:\"form-select\",id:\"category-select\"},register(\"selectCategory\",{required:true})),{},{onChange:function onChange(e){return onChangeSelectCategory(e.target.value);},children:categories.map(function(category){return/*#__PURE__*/_jsx(\"option\",{value:category,selected:category==userData.category,children:category});})}))]}),category===\"B\"&&/*#__PURE__*/_jsxs(\"div\",{class:\"form-group mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"kpp-select\",className:\"fs-5\",children:t(\"typeKPP\")}),/*#__PURE__*/_jsxs(\"select\",{class:\"form-select\",id:\"kpp-select\",onChange:function onChange(e){return onChangeSelectKPP(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{selected:true,disabled:true,value:\"MT\",children:t(\"selectKPP\")}),/*#__PURE__*/_jsx(\"option\",{value:\"MT\",children:\"\\u041C\\u0435\\u0445\\u0430\\u043D\\u0438\\u043A\\u0430 \"}),/*#__PURE__*/_jsx(\"option\",{value:\"AT\",children:\"\\u0410\\u0432\\u0442\\u043E\\u043C\\u0430\\u0442\"})]}),/*#__PURE__*/_jsx(\"small\",{class:\"text-danger fs-5\",children:t(\"warningKPP\")})]}),/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success my-2\",id:\"chooseDateBtn\",type:\"button\",onClick:dateButtonClick,children:t(\"selectDateButton\")})}),dateBlock&&/*#__PURE__*/_jsxs(\"div\",{className:\"date\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"form-group mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"date-picker\",children:t(\"selectDate\")}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"date-picker\",className:\"form-control form-group-lg\"},register(\"selectDate\",{required:true})),{},{type:\"date\",min:today||((_dateList$=dateList[0])===null||_dateList$===void 0?void 0:_dateList$.date),max:(_dateList=dateList[dateList.length-1])===null||_dateList===void 0?void 0:_dateList.date,disabled:dateList.length===0//onChange={(e) => onChangeSelectDate(e.target.value)}\n,onChange:function onChange(e){onChangeSelectDate(e.target.value);setErrorText(\"\");// Clear any previous error message\n},onFocus:fetchAvailableDates// Fetch available dates when the date picker is focused\n})),dateError?/*#__PURE__*/_jsx(\"small\",{class:\"text-danger\",children:t(\"notFoundRecord\")})// <p className=\"fs-5 my-2 text-danger\">К сожалению в текущий день нету записей</p>\n:null]}),/*#__PURE__*/_jsxs(\"div\",{class:\"form-group mb-5\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"time-select\",children:t(\"time\")}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({id:\"time-select\",className:\"form-select\"},register(\"selectTime\",{required:true})),{},{disabled:date===\"\"||(time===null||time===void 0?void 0:time.length)===0,onChange:function onChange(e){return onChangeSelectTime(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t(\"selectTime\")}),time===null||time===void 0?void 0:time.map(function(time){return/*#__PURE__*/_jsx(\"option\",{children:time.time},time.id);})]}))]}),/*#__PURE__*/_jsxs(\"div\",{class:\"form-group text-center\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger mx-5\",onClick:function onClick(){return reset();},children:t(\"cancel\")}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-success mx-5\",type:\"submit\",disabled:examId===null,children:[\" \",t(\"approve\")]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center mt-5\",children:t(\"smsNote\")})]})]}),loading&&/*#__PURE__*/_jsx(ModalLoading,{isLoading:loading})]});};export default PracticeExamForm;","map":{"version":3,"names":["React","useEffect","useState","useForm","useNavigate","useDispatch","useSelector","setData","UserDataView","ModalLoading","setDataUser","useTranslation","jsx","_jsx","jsxs","_jsxs","PracticeExamForm","_dateList$","_dateList","_useState","_useState2","_slicedToArray","availableDates","setAvailableDates","fetchAvailableDates","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","iin","token","response","data","availableDatesWithTime","wrap","_callee$","_context","prev","next","sessionStorage","getItem","replace","userData","fetch","headers","Authorization","method","body","JSON","stringify","departmentId","category","sent","ok","json","map","item","date","Error","concat","status","t0","console","error","stop","apply","arguments","isDateDisabled","includes","_useTranslation","t","_useState3","_useState4","loading","setLoading","_useState5","_useState6","today","setToday","_useState7","_useState8","dateError","setDateError","_useState9","_useState10","dateList","setDateList","_useState11","_useState12","setDate","_useState13","_useState14","time","setTime","_useState15","_useState16","examId","setExamId","_useState17","_useState18","kppApp","setKPP","_useState19","_useState20","errorText","setErrorText","_useState21","_useState22","notTheoryExam","setNotTheoryExam","dispatch","navigate","state","_useState23","_useState24","cities","setCities","_useState25","_useState26","departments","setDepartments","categories","_useState27","department_id","_useState28","setDepartmentId","_useState29","_useState30","setCategory","_useState31","city","_useState32","setCity","_useState33","_useState34","dateBlock","setDateBlock","_useState35","address","_useState36","setAddress","_useForm","selectCity","selectAddress","selectDate","IIN","mode","register","handleSubmit","reset","errors","formState","onChangeCity","value","filteredDepartments","filter","department","length","id","onChangeSelectDepartment","onChangeSelectCategory","onChangeSelectKPP","dateButtonClick","getFreeExamPractice","document","getElementById","disabled","style","display","onChangeSelectDate","sortedTime","onChangeSelectTime","_obj$","_obj$2","_obj$3","obj","timeObj","obj1","setItem","handleSubmitPracticeExam","user_id","exam_id","kpp","postUserExamData","find","name","setTimeout","fetchCities","_ref2","_callee2","_callee2$","_context2","fetchDepartments","_ref3","_callee3","_callee3$","_context3","_ref4","_callee4","_callee4$","_context4","then","catch","res","_x","user_exam_data","todayDate","Date","toISOString","slice","className","children","onSubmit","class","for","onChange","e","target","selected","_objectSpread","required","type","onClick","min","max","onFocus","isLoading"],"sources":["/home/erbulan/booking/src/Components/Reservation/PracticeExamPage/PracticeExamForm/PracticeExamForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { setData } from \"../../../../store/slices/ReservationTheoryData\";\n\nimport UserDataView from \"../../UserDataView/UserDataView\";\nimport ModalLoading from \"../../ModalLoading/ModalLoading\";\nimport { setDataUser } from \"../../../../store/slices/userDataSlice\";\nimport { useTranslation } from \"react-i18next\";\n\n\nconst PracticeExamForm = () => {\n\n  const [availableDates, setAvailableDates] = useState([]);\n  // ...\n  const fetchAvailableDates = async () => {\n    const url = \"/api/practice/free/exams/\";\n    const iin = sessionStorage.getItem(\"iin\").replace(/[^0-9]/g, \"\");\n    const token = userData.token;\n\n    try {\n      const response = await fetch(url, {\n        headers: {\n          Authorization: \"Bearer \" + token,\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          \"iin\": iin,\n          \"department_id\": departmentId,\n          \"category\": category,\n        }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        const availableDatesWithTime = data.map(item => item.date);\n        setAvailableDates(availableDatesWithTime);\n      } else {\n        throw new Error(`Request failed with status code ${response.status}`);\n      }\n    } catch (error) {\n      console.error(\"Error fetching available dates:\", error);\n    }\n  };\n\n  const isDateDisabled = date => {\n    return !availableDates.includes(date);\n  };\n\n\n  const { t } = useTranslation()\n  //LOADING ANIMATION\n  const [loading, setLoading] = useState(false);\n  //SET TODAY DATE FOR DATEPICKER\n  const [today, setToday] = useState(null);\n\n  //IF DATE IN THIS DAY NOT EXAMS\n  const [dateError, setDateError] = useState(false);\n  // DATE FREE EXAM LIST FOR PRACTICE\n  const [dateList, setDateList] = useState([]);\n  // APPLICANT SELECTED DATE\n  const [date, setDate] = useState(\"\");\n  //APPLICANT SELECTED TIME\n  const [time, setTime] = useState(null);\n  //SET EXAMID\n  const [examId, setExamId] = useState(null);\n  //SELECTED KPP IF APPLICANT HAVE CATEGORY \"B\"\n  const [kppApp, setKPP] = useState(\"MT\");\n  //SET ERROR WHEN SEND DATA AND TIME FOR RESERVATION\n  const [errorText, setErrorText] = useState(\"\");\n  //SHOW ERROR IF APPLICANT NOT PASS THEORY EXAM\n  const [notTheoryExam, setNotTheoryExam] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  //GET APPLICANT INFO FROM REDUX\n  const userData = useSelector((state) => state.userData.userData);\n  //NEW MENUS\n  const [cities, setCities] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const categories = ['A1', 'B1', 'A', 'B', 'C1', 'C', 'D1', 'D', 'BE', 'C1E', 'CE', 'D1E', 'DE'];\n  const [departmentId, setDepartmentId] = useState(userData.department_id);\n  const [category, setCategory] = useState(userData.category);\n  const [city, setCity] = useState(userData.city);\n  const [dateBlock, setDateBlock] = useState(false);\n  const [address, setAddress] = useState(userData.address);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    selectCity: \"\",\n    selectAddress: \"\",\n    selectDate: \"\",\n    IIN: \"\",\n    mode: \"onChange\",\n  });\n\n  //SELECT CITY\n  const onChangeCity = (value) => {\n    setCity(value);\n    const filteredDepartments = departments.filter((department) => department.city == value);\n    if (filteredDepartments.length > 0) {\n      setDepartmentId(filteredDepartments[0].id);\n    }\n  }\n  //SELECT DEPARTMENT\n  const onChangeSelectDepartment = (value) => {\n    setDepartmentId(value);\n  }\n  //SELECT CATEGORY\n  const onChangeSelectCategory = (value) => {\n    setCategory(value);\n  }\n\n  //SELECT KPP\n  const onChangeSelectKPP = (value) => {\n    setKPP(value);\n    // Вызов функции getFreeExamPractice при выборе опции селектора \"AT\" или \"MT\"\n    // if (value === \"AT\" || value === \"MT\") {\n    //   getFreeExamPractice(value);\n    // }\n  };\n  //SHOW SELECTORS OF DATE AND TIME\n  const dateButtonClick = () => {\n    setDateBlock(true);\n    getFreeExamPractice(kppApp);\n    document.getElementById('category-select').disabled = true;\n    document.getElementById('city-select').disabled = true;\n    document.getElementById('department-select').disabled = true;\n    document.getElementById('chooseDateBtn').style.display = 'none';\n    document.getElementById('kpp-select').disabled = true;\n  }\n\n  //SELECT DATE\n  const onChangeSelectDate = (value) => {\n    setDate(value);\n\n    const sortedTime = dateList.filter((item) => item.date.includes(value));\n\n    dispatch(setData(sortedTime));\n    setTime(sortedTime);\n  };\n\n  //SELECT TIME\n  const onChangeSelectTime = (value) => {\n    const obj = time.filter((item) => item.time.includes(value));\n\n    const timeObj = {\n      date: obj[0]?.date,\n      time: obj[0]?.time,\n    };\n\n    const obj1 = sessionStorage.getItem(\"date\");\n    if (obj1 === null) {\n      sessionStorage.setItem(\"date\", JSON.stringify(timeObj));\n    } else {\n      sessionStorage.setItem(\"date\", JSON.stringify(timeObj));\n    }\n    setExamId(obj[0]?.id);\n  };\n\n  //APPLICANT SELECTED DATE AND TIME SEND DATA\n  const handleSubmitPracticeExam = () => {\n    const obj = {\n      user_id: userData.id,\n      exam_id: examId,\n      department_id: departmentId,\n      category: category,\n      kpp: kppApp,\n    };\n\n    postUserExamData(obj);\n    setLoading(true);\n    sessionStorage.setItem(\"examId\", JSON.stringify(examId));\n    sessionStorage.setItem(\"kpp\", JSON.stringify(kppApp));\n    sessionStorage.setItem(\"category\", JSON.stringify(category));\n    const department = departments.find((department) => department.id == departmentId);\n    sessionStorage.setItem(\"department\", JSON.stringify(department.name));\n    sessionStorage.setItem(\"address\", JSON.stringify(department.address));\n\n    //LOADING ANIMATE\n    setTimeout(() => {\n      setLoading(false);\n    }, 500);\n    reset();\n  };\n\n  //fetches\n  // ===========NEW DROPDOWN MENU FUNCTIONS========================\n  //GET CITIES\n  const fetchCities = async () => {\n    const url = \"/api/cities/\";\n    const token = userData.token;\n    const response = await fetch(url, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    setCities(data);\n  };\n\n  // //GET DEPARTMENTS\n  const fetchDepartments = async () => {\n    const url = \"/api/departments/\";\n    const token = userData.token;\n    const response = await fetch(url, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    setDepartments(data);\n  };\n\n  //GET FREE PRACTICE EXAM\n  const getFreeExamPractice = async (kpp) => {\n    const url = \"/api/practice/free/exams/\";\n    const iin = sessionStorage.getItem(\"iin\").replace(/[^0-9]/g, \"\");\n    const token = userData.token;\n    fetch(url, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        \"iin\": iin,\n        \"department_id\": departmentId,\n        \"category\": category,\n        \"kpp\": kpp,\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(`Request failed with status code ${response.status}`);\n        }\n      })\n      .then((data) => {\n        if (data.length === 0) {\n          setDateError(true);\n          setDateList(data);\n        } else {\n          setDateError(false);\n          setDateList(data);\n        }\n      })\n      .catch(function (res) { });\n  };\n\n  //POST DATA TO SERVER AFTER CHOISE APPLICANT DATE AND TIME\n  // const postUserExamData = (user_exam_data) => {\n  //   const url = \"/api/practice/enroll/queue/\";\n  //   const token = userData.token;\n  //   fetch(url, {\n  //     headers: {\n  //       Authorization: \"Bearer \" + token,\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     method: \"POST\",\n  //     body: JSON.stringify(user_exam_data),\n  //   })\n  //     .then((response) => {\n  //       if (response.ok) {\n  //         return response.json();\n  //       } else {\n  //         setErrorText(response.status);\n  //         throw new Error(`Request failed with status code ${response.status}`);\n  //       }\n  //     })\n  //     .then((res) => {\n  //       //IF APPLICANT ENROLLED TO PRACTICE EXAM\n  //       if (res.enrolled) {\n  //         sessionStorage.setItem(\"appNumber\", JSON.stringify(res.app_number));\n  //         // navigate(\"/reservation/practice-exam/ticket\");\n  //         navigate(\"/reservation/practice-exam/verification\");\n  //       }\n  //       //APPLICANT NOT ENRLLED GET ERROR FROM SERVER\n  //       else if (res.error) {\n  //         setNotTheoryExam(res.error);\n  //       }\n  //     })\n  //     .catch(function (res) {\n  //       setErrorText(res);\n  //     });\n  // };\n\n  const postUserExamData = (user_exam_data) => {\n    navigate(\"/reservation/practice-exam/verification\");\n  };\n\n  useEffect(() => {\n    const todayDate = new Date().toISOString().slice(0, 10);\n    setToday(todayDate);\n    //getFreeExamPractice(userData.department_code, token.access);\n    if (userData.category !== 'B') {\n      onChangeSelectKPP(\"MT\");\n    }\n    // Fetching data for dropdowns // NEW MENU FUNCTIONS\n    fetchCities();\n    fetchDepartments();\n    fetchAvailableDates(); // Fetch available dates here\n  }, []);\n  //END OF NEW MENU FUNCTIONS\n\n  //HTML\n\n  return (\n    <div className=\"form_input_date_item\">\n      {/* SHOW APPLICANT INFO */}\n      <div className=\"d-flex align-items-start justify-content-center form-control my-4 \">\n        <UserDataView />\n      </div>\n      <h2>{errorText}</h2>\n      {/* APPLICANT NOT PASS THEORY EXAM */}\n      {notTheoryExam.length !== 0 ? <h2>{notTheoryExam}</h2> : null}\n\n      <form className=\"fs-5\"\n        onSubmit={handleSubmit(handleSubmitPracticeExam)}\n      >\n        {/* ================SELECT CITY================ */}\n        <div class=\"form-group mb-3\">\n          <label for=\"city-select\">\n            {/*Выберите город*/}\n            {t(\"selectCity\")}\n          </label>\n          <select class=\"form-select\" id=\"city-select\" onChange={(e) => onChangeCity(e.target.value)}>\n            {cities.map((city) => (\n              <option key={city.id} value={city.id} selected={city.name == userData.city}>{city.name}</option>\n            ))}\n          </select>\n        </div>\n\n        {/* ================SELECT DEPARTMENT================ */}\n        <div class=\"form-group mb-3\">\n          <label for=\"department-select\">\n            {/*Выберите департамент*/}\n            {t(\"selectDepartment\")}\n\n          </label>\n          <select class=\"form-select\" id=\"department-select\" onChange={(e) => onChangeSelectDepartment(e.target.value)}>\n            <option selected disabled value=\"\">\n              {t(\"selectDepartment\")}\n            </option>\n            {departments\n              .filter((department) => department.city == document.getElementById('city-select').value)\n              .map((department) => (\n                <option\n                  key={department.id}\n                  value={department.id}\n                /*selected={department.id == userData.department_id}*/\n                >\n                  {department.name}\n                </option>\n              ))}\n            {/*departments.map((department) => (\n              <option key={department.id} value={department.id} selected={department.id == userData.department_id}>{department.name}</option>\n            ))*/}\n          </select>\n        </div>\n\n        {/* ================SELECT CATEGORY================ */}\n\n        <div class=\"form-group mb-3\">\n          <label for=\"category-select\" className=\"fs-5\">\n            {/*Выберите категорию*/}\n            {t(\"selectCategory\")}\n          </label>\n          <select class=\"form-select\" id=\"category-select\" {...register(\"selectCategory\", { required: true })} onChange={(e) => onChangeSelectCategory(e.target.value)}>\n            {categories.map((category) => (\n              <option value={category} selected={category == userData.category}>{category}</option>\n            ))}\n          </select>\n          {/* <small class=\"text-danger fs-5\">\n            Предупреждение категория\n             {t(\"warningCategory\")} \n        </small> */}\n        </div>\n\n        {category === \"B\" && (<div class=\"form-group mb-3\">\n          <label for=\"kpp-select\" className=\"fs-5\">\n            {/* ВидКПП */}\n            {t(\"typeKPP\")}\n          </label>\n          <select class=\"form-select\" id=\"kpp-select\" onChange={(e) => onChangeSelectKPP(e.target.value)}>\n            {<option selected disabled value=\"MT\">\n              {/* Выберите КПП */}\n              {t(\"selectKPP\")}</option>}\n            <option value=\"MT\">Механика </option>\n            <option value=\"AT\">Автомат</option>\n          </select>\n\n          <small class=\"text-danger fs-5\">\n            {/*Пожалуйста, выберите указанный при регистрации вид КПП.*/}\n            {t(\"warningKPP\")}\n          </small>\n        </div>)\n        }\n\n        {/*Выбрать дату*/}\n        <center>\n          <button\n            className=\"btn btn-success my-2\"\n            id=\"chooseDateBtn\"\n            type=\"button\"\n            onClick={dateButtonClick}\n          >\n            {/*Выбрать дату и время*/}\n            {t(\"selectDateButton\")}\n          </button>\n        </center>\n        {/* ===========ВЫБЕРИТЕ ДАТУ============== */}\n        {dateBlock && (\n          <div className=\"date\">\n            <div class=\"form-group mb-3\">\n              {/* SELECT DATE */}\n              <label for=\"date-picker\">{t(\"selectDate\")}</label>\n              <input\n                id=\"date-picker\"\n                className=\"form-control form-group-lg\"\n                {...register(\"selectDate\", { required: true })}\n                type=\"date\"\n                min={today || dateList[0]?.date}\n                max={dateList[dateList.length - 1]?.date}\n                disabled={dateList.length === 0}\n                //onChange={(e) => onChangeSelectDate(e.target.value)}\n                onChange={(e) => {\n                  onChangeSelectDate(e.target.value);\n                  setErrorText(\"\"); // Clear any previous error message\n                }}\n                onFocus={fetchAvailableDates} // Fetch available dates when the date picker is focused\n              />\n\n              {/* ERROR*/}\n              {/* {errors?.selectDate && ( */}\n              {/* // <small class=\"text-danger\"> */}\n              {/* Выберите дату*/}\n              {/* {t(\"selectDate\")} */}\n              {/* </small> */}\n              {/* // <p className=\"error_text text-danger my-2\">Выберите дату и время</p> */}\n              {/* // )} */}\n              {/* ERROR */}\n\n\n              {dateError ? (\n                <small class=\"text-danger\">\n                  {/* К сожалению на текущий день записи нет. */}\n                  {t(\"notFoundRecord\")}\n                </small>\n                // <p className=\"fs-5 my-2 text-danger\">К сожалению в текущий день нету записей</p>\n              ) : null}\n            </div>\n\n            {/* ================ВЫБЕРИТЕ ВРЕМЯ============== */}\n\n            <div class=\"form-group mb-5\">\n              {/* SELECT TIME */}\n              <label for=\"time-select\">{t(\"time\")}</label>\n              <select\n                id=\"time-select\"\n                className=\"form-select\"\n                {...register(\"selectTime\", { required: true })}\n                disabled={date === \"\" || time?.length === 0}\n                onChange={(e) => onChangeSelectTime(e.target.value)}\n              >\n                <option value=\"\">\n                  {/* Выберите время */}\n                  {t(\"selectTime\")}\n                </option>\n                {time?.map((time) => (\n                  <option key={time.id}>{time.time}</option>\n                ))}\n              </select>\n            </div>\n            <div class=\"form-group text-center\">\n              <button className=\"btn btn-danger mx-5\" onClick={() => reset()}>{/* Отмена */}{t(\"cancel\")}</button>\n\n\n              <button\n                className=\"btn btn-success mx-5\"\n                type=\"submit\"\n                disabled={examId === null}\n\n              >{/* Подтвердить */} {t(\"approve\")}</button>\n            </div>\n\n            <p className=\"text-center mt-5\">\n              {t(\"smsNote\")}\n            </p>\n\n          </div>)\n        }\n      </form >\n      {loading && <ModalLoading isLoading={loading} />}\n    </div >\n  );\n};\n\nexport default PracticeExamForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}