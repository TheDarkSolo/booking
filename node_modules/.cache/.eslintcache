[{"/home/erbulan/booking/src/index.js":"1","/home/erbulan/booking/src/App.js":"2","/home/erbulan/booking/src/store/store.js":"3","/home/erbulan/booking/src/config/i18n.js":"4","/home/erbulan/booking/src/Context/Context.js":"5","/home/erbulan/booking/src/Components/Header/Header.js":"6","/home/erbulan/booking/src/Components/Home/Home.js":"7","/home/erbulan/booking/src/Components/Application/Application.js":"8","/home/erbulan/booking/src/Components/Reservation/Reservaton.js":"9","/home/erbulan/booking/src/Components/ResultExam/ResultExam.js":"10","/home/erbulan/booking/src/Components/TrafficRulesInstructions/TrafficRulesInstructions.js":"11","/home/erbulan/booking/src/Components/TicketTheoryExam/TicketTheoryExam.js":"12","/home/erbulan/booking/src/Components/SearchResultExam/SearchResultExam.js":"13","/home/erbulan/booking/src/Components/Reservation/PracticeExamPage/PracticeExamPage.js":"14","/home/erbulan/booking/src/Components/ErrorPage/ErrorPage.js":"15","/home/erbulan/booking/src/Components/ErrorPage/ErrorEnrollPage.js":"16","/home/erbulan/booking/src/Components/ErrorPage/ErrorVerifyPage.js":"17","/home/erbulan/booking/src/Components/TicketPracticeExam/TicketPracticeExam.js":"18","/home/erbulan/booking/src/Components/Reservation/TheoryExamPage/TheoryExamPage.js":"19","/home/erbulan/booking/src/store/slices/ReservationTheoryData.js":"20","/home/erbulan/booking/src/store/slices/userDataSlice.js":"21","/home/erbulan/booking/src/store/slices/departmentDataSlice.js":"22","/home/erbulan/booking/src/store/slices/token.js":"23","/home/erbulan/booking/src/Components/Reservation/ModalLoading/ModalLoading.js":"24","/home/erbulan/booking/src/helpers/ApiRequestList.js":"25","/home/erbulan/booking/src/Components/Modal/ModalNotFoundDT.js":"26","/home/erbulan/booking/src/Components/Modal/ModalPracticeError.js":"27","/home/erbulan/booking/src/Components/Modal/ModalTheoryExam.js":"28","/home/erbulan/booking/src/Components/Modal/ModalCongratPractice.js":"29","/home/erbulan/booking/src/Components/Modal/ModalActiveTicket.js":"30","/home/erbulan/booking/src/Components/Reservation/UserDataView/UserDataView.js":"31","/home/erbulan/booking/src/Components/Reservation/TheoryExamPage/TheoryExamVerification.js":"32","/home/erbulan/booking/src/Components/Reservation/PracticeExamPage/PracticeExamVerification.js":"33","/home/erbulan/booking/src/Components/Reservation/TheoryExamPage/TheoryExamForm.js":"34","/home/erbulan/booking/src/Components/Reservation/PracticeExamPage/PracticeExamForm.js":"35","/home/erbulan/booking/src/Components/Modal/ModalAppNumberError.js":"36","/home/erbulan/booking/src/Components/Reservation/UserDataView/UserDataView2.js":"37"},{"size":353,"mtime":1686908933538,"results":"38","hashOfConfig":"39"},{"size":2889,"mtime":1692166340176,"results":"40","hashOfConfig":"39"},{"size":485,"mtime":1686908933538,"results":"41","hashOfConfig":"39"},{"size":15156,"mtime":1692726275798,"results":"42","hashOfConfig":"39"},{"size":414,"mtime":1686908933535,"results":"43","hashOfConfig":"39"},{"size":1384,"mtime":1686908933535,"results":"44","hashOfConfig":"39"},{"size":8878,"mtime":1692350962871,"results":"45","hashOfConfig":"39"},{"size":257,"mtime":1686908933535,"results":"46","hashOfConfig":"39"},{"size":1680,"mtime":1692349757162,"results":"47","hashOfConfig":"39"},{"size":3322,"mtime":1686908933535,"results":"48","hashOfConfig":"39"},{"size":863,"mtime":1686908933535,"results":"49","hashOfConfig":"39"},{"size":5592,"mtime":1692333689907,"results":"50","hashOfConfig":"39"},{"size":3108,"mtime":1686908933535,"results":"51","hashOfConfig":"39"},{"size":12764,"mtime":1692184170151,"results":"52","hashOfConfig":"39"},{"size":519,"mtime":1686908933535,"results":"53","hashOfConfig":"39"},{"size":195,"mtime":1686908933535,"results":"54","hashOfConfig":"39"},{"size":539,"mtime":1686908933535,"results":"55","hashOfConfig":"39"},{"size":5835,"mtime":1692180736377,"results":"56","hashOfConfig":"39"},{"size":14005,"mtime":1693203458012,"results":"57","hashOfConfig":"39"},{"size":428,"mtime":1686908933538,"results":"58","hashOfConfig":"39"},{"size":569,"mtime":1686908933538,"results":"59","hashOfConfig":"39"},{"size":601,"mtime":1686908933538,"results":"60","hashOfConfig":"39"},{"size":376,"mtime":1686908933538,"results":"61","hashOfConfig":"39"},{"size":490,"mtime":1686908933535,"results":"62","hashOfConfig":"39"},{"size":5300,"mtime":1691477570116,"results":"63","hashOfConfig":"39"},{"size":650,"mtime":1686908933535,"results":"64","hashOfConfig":"39"},{"size":592,"mtime":1686908933535,"results":"65","hashOfConfig":"39"},{"size":862,"mtime":1686908933535,"results":"66","hashOfConfig":"39"},{"size":853,"mtime":1686908933535,"results":"67","hashOfConfig":"39"},{"size":1593,"mtime":1692334385913,"results":"68","hashOfConfig":"39"},{"size":951,"mtime":1692099919239,"results":"69","hashOfConfig":"39"},{"size":7270,"mtime":1692167354007,"results":"70","hashOfConfig":"39"},{"size":7923,"mtime":1692178929390,"results":"71","hashOfConfig":"39"},{"size":12334,"mtime":1692774742374,"results":"72","hashOfConfig":"39"},{"size":16543,"mtime":1692697183678,"results":"73","hashOfConfig":"39"},{"size":984,"mtime":1691997449053,"results":"74","hashOfConfig":"39"},{"size":774,"mtime":1692163994681,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r4dd9a",{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/erbulan/booking/src/index.js",[],[],"/home/erbulan/booking/src/App.js",[],[],"/home/erbulan/booking/src/store/store.js",[],[],"/home/erbulan/booking/src/config/i18n.js",["202","203"],[],"import i18n from \"i18next\";\nimport { initReactI18next, i } from \"react-i18next\";\n\nimport booking from \"../assets/images/booking.jpeg\";\nimport res_exam from \"../assets/images/res_exam.jpeg\";\nimport pdd from \"../assets/images/pdd.jpeg\";\n\n// ============================\nexport const getCurrentLanguage = () => {\n  return i18n.language;\n}\n// ============================\n\ni18n.use(initReactI18next).init({\n  fallbackLng: \"ru\",\n  interpolation: {\n    escapeValue: false,\n  },\n  resources: {\n    ru: {\n      translation: {\n        title: \"Предварительное бронирование электронной очереди на сдачу экзаменов для получения водительского удостоверения\",\n        menu: [\n          {\n            id: 1,\n            menu_name: \"Электронное бронирование\",\n            menu_img: booking,\n            menu_bg_color: \"#FEFEFE\",\n            link: \"reservation\",\n          },\n\n\n          //  {\n          //     id: 2,\n          //     menu_name: \"Результаты экзаменов\",\n          //     menu_img: res_exam,\n          //     menu_bg_color: \"#6cb883\",\n          //     color_text: \"#FFFFFF\",\n          //     link: \"result-exam\",\n          //   },\n\n\n          {\n            id: 3,\n            menu_name: \"Инструкция\",\n            menu_img: pdd,\n            menu_bg_color: \"#deebec\",\n            link: \"traffic-rules\",\n          },\n        ],\n        btn_title_reservation_theory_exam:\n          \"Онлайн бронирование для сдачи теоретического экзамена\",\n        btn_title_reservation_practice_exam:\n          \"Онлайн бронирование для сдачи практического экзамена\",\n        titlePageTheoryExam:\n          \"Предварительная запись на сдачу теоретического экзамена\",\n        titlePagePracticeExam:\n          \"Предварительная запись на сдачу практического экзамена\",\n        btn_title_reservation: \"Авторизоваться\",\n        head_text_input: \"После ввода данных, проверочный код будет направлен на Ваш абонентский номер телефона. Убедитесь, что он зарегистрирован в базе мобильных граждан по указанному ИИН\",\n        iin_input_placeholder: \"Введите ИИН\",\n        iin: \"ИИН\",\n        city: \"Город\",\n        department: \"Отделение\",\n        category: \"Категория\",\n        selectDateTitle: \"Дата\",\n        time: \"Время\",\n        goBack: \"Назад\",\n        enterOTP: \"Введите код отправленный на ваш номер телефона\",\n        bron: \"Забронировать\",\n        againOTP: \"Отправить код повторно\",\n        error: \"Ошибка\",\n        notPassedTheory: \"Вы не сдали теоретический экзамен!\",\n        typeKPP: \"Вид КПП\",\n        selectKPP: \"Выберите КПП\",\n        hasActiveTicket: \"У вас уже есть активный талон. Данные были высланы ранее в виде SMS. Ниже информация по вашему талону:\",\n        warningKPP: \"Пожалуйста, выберите указанный при регистрации вид КПП.\",\n        selectDate: \"Выберите дату\",\n        notFoundRecord: \"К сожалению на текущий день записи нет.\",\n        selectTime: \"Выберите время\",\n        approve: \"Подтвердить\",\n        cancel: \"Отмена\",\n        notIINFound: \"Заявитель с таким ИИН не найден.\",\n        wrongOTP: \"Вы ввели некорректный код\",\n        noAppNumber: \"У вас ошибочный номер заявки.\",\n        wrongIIN: \"Неверный ИИН\",\n        instructionPDD: \"Инструкция ПДД\",\n        downloadKAZ: \"Скачать на КАЗ\",\n        downloadRUS: \"Скачать на РУС\",\n        selectCity: \"Выберите регион\",\n        selectDepartment: \"Выберите Специализированный ЦОН\",\n        selectCategory: \"Выберите категорию\",\n        selectDateButton: \"Выбрать дату и время\",\n        stateCorp: \"НАО «Государственная корпорация»\",\n        gov4c: \"«Правительство для граждан»\",\n        callCenter: \"Единый контакт-центр\",\n        callFree: \"(Звонок бесплатный)\",\n\n        talonServiceType: \"Тип услуги: \",\n        talonService: \"Первичное получение прав\",\n        talonData: \"Дата:\",\n        talonTime: \"Время:\",\n        talonAddress: \"Адрес:\",\n        talonSave: \"Сохраните этот талон\",\n        talonPDF: \"Скачать PDF\",\n        talonDigital: \"Цифровой талон №\",\n        talonNote: \"Примечание: Если это ваша <span>повторная пересдача</span> практического экзамена, то Вам необходимо обратиться в Специализированный ЦОН для получения новой заявки.\",\n\n        talonNoteTheory: \"Примечание: Если это ваша <span>повторная пересдача</span> теоретического экзамена, то Вам необходимо обратиться в Специализированный ЦОН для получения новой заявки.\",\n\n\n        bmgNote: \"Уважаемый услугополучатель, убедитесь что ваш абонентский номер телефона зарегистрирован в базе мобильных граждан по указанному ИИН\",\n        smsNote: \"После того как Вы выбрали дату и время,  сформируется цифровой талон и придет СМС уведомление от 1414\",\n\n        preliminaryInfo: \"Предварительная информация\",\n        verificationNote: \"Удостоверьтесь в правильности введенных данных. После нажатия кнопки «Подтвердить» бронирование не подлежит отмене.\",\n        verificationDecline: \"Отменить\",\n        verificationApprove: \"Подтвердить\",\n\n        applicationNumber: \"Номер заявки\",\n\n        fullName: \"ФИО\",\n\n        talonServiceTheory: \"Регистрация на теоритический экзамен\",\n\n        textTheory1: \"Первичное получение водительских удостоверений на право управления ТС\",\n        textTheory2: \"Получение водительских удостоверений дополнительной категории на право управления транспортными средствами\",\n        textTheory3: \"Замена водительских удостоверений по причине окончания срока действия\",\n        textTheory4: \"Возвращение ранее выданного Водительского удостоверения после лишения\",\n\n\n        examDate: \"Дата экзамена\",\n        examTime: \"Время экзамена\",\n        examDepartment: \"ЦОН\",\n\n        expiredAppNumber: \"Срок действия заявки истек\",\n\n      },\n    },\n    kz: {\n      translation: {\n        title: \"Жүргізуші куәлігін алу үшін практикалық емтиханға электронды кезекті алдын ала брондау\",\n        menu: [\n          {\n            id: 1,\n            menu_name: \"Электрондық брондау\",\n            menu_img: booking,\n            menu_bg_color: \"#FEFEFE\",\n            link: \"reservation\",\n          },\n          /*\n                    {\n                      id: 2,\n                      menu_name: \"Eмтихан нәтижелері\",\n                      menu_img: res_exam,\n                      menu_bg_color: \"#6cb883\",\n                      color_text: \"#FFFFFF\",\n                      link: \"result-exam\",\n                    },\n          */\n          {\n            id: 3,\n            menu_name: \"Нұсқау\",\n            menu_img: pdd,\n            menu_bg_color: \"#deebec\",\n            link: \"traffic-rules\",\n          },\n        ],\n        btn_title_reservation_theory_exam: \"Теориялық емтиханға онлайн тіркелу\",\n        btn_title_reservation_practice_exam:\n          \"Практикалық емтиханға онлайн тіркелу\",\n        titlePageTheoryExam: \"Теориялық емтиханға алдын ала жазылу\",\n        titlePagePracticeExam: \"Тәжірибелік емтиханға алдын ала жазылу\",\n        btn_title_reservation: \"Авторизация\",\n        head_text_input:\n          \"Деректерді енгізгеннен кейін, сіздің абоненттік телефон нөміріңізге тексеру коды жіберіледі. Ол ұялы байланыстағы азаматтар базасында тіркелгеніне көз жеткізіңіз.\",\n        iin_input_placeholder: \"ЖСН-ды енгізіңіз\",\n        iin: \"ЖСН\",\n        city: \"Қала\",\n        department: \"Бөлім\",\n        category: \"Категория\",\n        selectDateTitle: \"Күні\",\n        time: \"Уақыт\",\n        goBack: \"Артқа\",\n        enterOTP: \"Сіздің телефон нөміріңізге жіберілген кодты енгізіңіз.\",\n        bron: \"Брондау\",\n        againOTP: \"Кодты қайта жіберу\",\n        error: \"Қате\",\n        notPassedTheory: \"Сіз теориялық емтиханды тапсырмадыңыз!\",\n        typeKPP: \"Берілістер қорабының(КПП) түрі\",\n        selectKPP: \"БҚ(КПП) таңдаңыз\",\n        hasActiveTicket: \"Сізде белсенді талон бар. Деректер алдында SMS түрінде жіберілді. Талоныңыз туралы ақпарат төменде көрсетілген:\",\n        warningKPP: \"Тіркелу кезінде көрсетілген берілістер қорабының түрін таңдаңыз.\",\n        selectDate: \"Күнді таңдаңыз\",\n        notFoundRecord: \"Өкінішке орай таңдалған күнге жазба жоқ.\",\n        selectTime: \"Уақытты таңдаңыз\",\n        approve: \"Растау\",\n        cancel: \"Болдырмау\",\n        notIINFound: \"Бұндай ЖСН бар өтініш беруші табылмады.\",\n        wrongOTP: \"Сіз қате кодты енгіздіңіз.\",\n        noAppNumber: \"Сіздің өтініш нөміріңіз қате.\",\n        wrongIIN: \"ЖСН қате\",\n        instructionPDD: \"ЖҚЕ нұсқауы\",\n        downloadKAZ: \"Қазақ тіліндегі нұсқауды жүктеу\",\n        downloadRUS: \"Орыс тіліндегі нұсқауды жүктеу\",\n        selectCity: \"Регионды таңдаңыз\",\n        selectDepartment: \"Мамандандырылған ХҚКО таңдаңыз\",\n        selectCategory: \"Категорияны таңдау\",\n        selectDateButton: \"Күн мен уақытты таңдау\",\n        stateCorp: \"«Азаматтарға арналған үкімет»\",\n        gov4c: \"Мемлекеттік корпорациясы» КЕ АҚ\",\n        callCenter: \"Бірыңғай байланыс орталығы\",\n        callFree: \"(Қоңырау шалу тегін)\",\n\n        talonServiceType: \"Қызмет түрі: \",\n        talonService: \"Жүргізуші куәлігін алу\",\n        talonData: \"Күні:\",\n        talonTime: \"Уақыты:\",\n        talonAddress: \"Мекен-жайы:\",\n        talonSave: \"Талонды сақтап қойыңыз\",\n        talonPDF: \"PDF файлды жүктеу\",\n        talonDigital: \"Цифрлық талон №\",\n        talonNote: \"Ескерту: Егер сіз практикалық емтиханды <span>қайта тапсырып</span> жатсаңыз, онда алдымен Cізге Мамандандырылған Халыққа Қызмет Көрсету Орталығына жүгініп, жаңа өтініш алу қажет.\",\n\n        talonNoteTheory: \"Ескерту: Егер сіз теориялық емтиханды <span>қайта тапсырып</span> жатсаңыз, онда алдымен Cізге Мамандандырылған Халыққа Қызмет Көрсету Орталығына жүгініп, жаңа өтініш алу қажет.\",\n\n        bmgNote: \"Құрметті қызмет алушы, абоненттік телефон нөміріңіз көрсетілген ЖСН бойынша ұялы байланыстағы азаматтар базасында тіркелгеніне көз жеткізіңіз\",\n        smsNote: \"Күн мен уақытты таңдағаннан кейін цифрлық билет жасалады және 1414 нөмірінен SMS хабарлама жіберіледі\",\n\n        preliminaryInfo: \"Алдын ала ақпарат\",\n        verificationNote: \"Енгізілген деректердің дұрыстығына көз жеткізіңіз. «Растау» түймесін басқаннан кейін брондаудан бас тарту мүмкін емес.\",\n        verificationDecline: \"Бас тарту\",\n        verificationApprove: \"Растау\",\n\n        applicationNumber: \"Өтініш нөмірі\",\n\n        fullName: \"Аты-жөні\",\n\n        talonServiceTheory: \"Теориялық емтиханға тіркелу\",\n\n        textTheory1: \"Көлік құралын басқару құқығына бірінші рет жүргізуші куәлігін алу\",\n        textTheory2: \"Көлік құралдарын басқару құқығына қосымша санаттағы жүргізуші куәлігін алу\",\n        textTheory3: \"Жүргізуші куәлігін мерзімінің аяқталуына байланысты ауыстыру\",\n        textTheory4: \"Айырылғаннан кейін бұрын берілген жүргізуші куәлігін қайтару\",\n\n        examDate: \"Емтихан күні\",\n        examTime: \"Емтихан уақыты\",\n        examDepartment: \"ХҚКО\",\n\n        expiredAppNumber: \"Өтініш нөмірінің мерзімі аяқталды\",\n      },\n    },\n  },\n});\n\nexport default i18n;\n","/home/erbulan/booking/src/Context/Context.js",[],[],"/home/erbulan/booking/src/Components/Header/Header.js",[],[],"/home/erbulan/booking/src/Components/Home/Home.js",["204","205","206","207"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n//import Menu from \"./Menu/Menu\";\n//import MenuNewDesign from \"../MenuNewDesign/MenuNewDesign\";\n\nimport driver_license from \"../../assets/images/driver_license.jpg\";\n\nimport { useTranslation } from \"react-i18next\";\n//import { MenuHoverContext } from \"../../Context/Context\";\n\nimport \"./Home.css\";\n//import { Container } from \"react-bootstrap\";\n\nimport logo from \"../../assets/images/logo.jpg\";\n\nexport default function Home() {\n  const { t } = useTranslation();\n\n  // hover or not menu item for resize h1\n  //  const { isHover, setIsHover } = useContext(MenuHoverContext);\n\n\n  return (\n    <>\n      <div className=\"header_text_block\">\n        <div className=\"header_text_block_item w-100\">\n          <h1 className=\"header_text\">\n            {t(\"title\")}\n          </h1>\n        </div>\n        <div className=\"header_text_block_item\">\n          <img\n            src={driver_license}\n            className=\"driver_img\"\n            alt=\"Водительское удостоверение\"\n          />\n        </div>\n      </div>\n      <div style={{ padding: '0% 15% 0px' }} className=\"bg-light py-5\">\n        <div class=\"container overflow-hidden\">\n          <div class=\"row gx-5\">\n            <div class=\"col\">\n              <Link to={\"/reservation\"}>\n                <div class=\"p-4 rounded d-flex flex-column align-items-center border bg-white cursor-pointer mb-2\">\n                  <img\n                    src={t(\"menu.0.menu_img\")}\n                    alt=\"водительское удостоверения\"\n                    className=\"p-3\"\n                    height={150}\n                  />\n                  <h3 className=\"text-dark\">{t(\"menu.0.menu_name\")}</h3>\n                </div>\n              </Link>\n            </div>\n            <div class=\"col\">\n              {/* <Link to={\"/traffic-rules\"}> */}\n              <a href=\"https://egov.kz/cms/kk/articles/poluchenie_pravab\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <div class=\"p-4 rounded d-flex flex-column align-items-center border bg-white cursor-pointer mb-2\">\n                  <img\n                    src={t(\"menu.1.menu_img\")}\n                    alt=\"водительское удостоверения\"\n                    className=\"p-3\"\n                    height={150}\n                  />\n                  <h3 className=\"text-dark\">{t(\"menu.1.menu_name\")}</h3>\n                </div>\n                {/* </Link> */}\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n\n      <br></br>\n\n\n      {/* <div className=\"header_text_block d-flex flex-column align-items-start bg-light bg-gradient py-5\">\n      <div>\n        <h1 className=\"fs-1\">{t(\"menu.0.menu_name\")}</h1>\n        <div className=\"mt-3\">\n          <Link to={\"/reservation/practice-exam\"} className=\"btn btn-outline-success mx-2 my-1\"><span className=\"fs-5\">{t(\"btn_title_practce_exam\")}</span></Link>\n        </div>\n      </div>\n      <div className=\"mt-4\">\n        <h1 className=\"fs-1\">{t(\"menu.2.menu_name\")}</h1>\n        <div className=\"mt-3\">\n          <Link to={\"/traffic-rules\"} className=\"btn btn-outline-success mx-2 my-1\"><span className=\"fs-5\">Скачать на казахском</span></Link>\n          <Link to={\"/traffic-rules\"} className=\"btn btn-outline-success mx-2 my-1\"><span className=\"fs-5\">Скачать на русском</span></Link>\n        </div>\n      </div>\n    </div> */}\n\n\n\n\n      <footer className=\"footer-row\">\n        <div className=\"row align-center\">\n          <div className=\"col-12 header-row-top\">\n            <div className=\"logo-text-block\">\n              <Link to=\"/\">\n                <img className=\"logo2\" src={logo} alt=\"logo\" />\n              </Link>\n              <div className=\"text\">\n                <span>\n                  {/* НАО «Государственная корпорация» */}\n                  {t(\"stateCorp\")}\n                </span>\n                <span>\n                  {/* «Правительство для граждан» */}\n                  {t(\"gov4c\")}\n                </span>\n              </div>\n            </div>\n\n            <div className=\"social\">\n              <a href=\"https://www.instagram.com/gov4c.kz/\" target=\"_blank\">\n                <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <rect width=\"36\" height=\"36\" rx=\"8\" fill=\"white\"></rect>\n                  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.9165 14.5166C10.9165 13.0167 10.9165 12.2668 11.2985 11.7411C11.4218 11.5713 11.5711 11.422 11.7409 11.2986C12.2667 10.9166 13.0166 10.9166 14.5165 10.9166H21.4832C22.9831 10.9166 23.733 10.9166 24.2587 11.2986C24.4285 11.422 24.5778 11.5713 24.7012 11.7411C25.0832 12.2668 25.0832 13.0167 25.0832 14.5166V21.4833C25.0832 22.9832 25.0832 23.7331 24.7012 24.2589C24.5778 24.4287 24.4285 24.578 24.2587 24.7013C23.733 25.0833 22.9831 25.0833 21.4832 25.0833H14.5165C13.0166 25.0833 12.2667 25.0833 11.7409 24.7013C11.5711 24.578 11.4218 24.4287 11.2985 24.2589C10.9165 23.7331 10.9165 22.9832 10.9165 21.4833V14.5166ZM17.9998 14.25C15.9289 14.25 14.2498 15.929 14.2498 18C14.2498 20.0709 15.9289 21.75 17.9998 21.75C20.0708 21.75 21.7498 20.0709 21.7498 18C21.7498 15.929 20.0708 14.25 17.9998 14.25ZM17.9998 20.3437C16.708 20.3437 15.6561 19.2918 15.6561 18C15.6561 16.7071 16.708 15.6562 17.9998 15.6562C19.2917 15.6562 20.3436 16.7071 20.3436 18C20.3436 19.2918 19.2917 20.3437 17.9998 20.3437ZM22.5308 13.9687C22.5308 14.2447 22.3071 14.4684 22.0311 14.4684C21.7551 14.4684 21.5314 14.2447 21.5314 13.9687C21.5314 13.6927 21.7551 13.469 22.0311 13.469C22.3071 13.469 22.5308 13.6927 22.5308 13.9687Z\" fill=\"#22262F\"></path>\n                </svg>\n              </a>\n              <a href=\"https://www.facebook.com/gov4c\" target=\"_blank\">\n                <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <rect width=\"36\" height=\"36\" rx=\"8\" fill=\"white\"></rect>\n                  <path d=\"M21.853 10.5033L19.8542 10.5C17.6087 10.5 16.1575 12.0294 16.1575 14.3966V16.1932H14.1478C13.9741 16.1932 13.8335 16.3378 13.8335 16.5162V19.1193C13.8335 19.2977 13.9743 19.4421 14.1478 19.4421H16.1575V26.0105C16.1575 26.1889 16.2981 26.3333 16.4718 26.3333H19.0938C19.2675 26.3333 19.4081 26.1887 19.4081 26.0105V19.4421H21.7579C21.9316 19.4421 22.0722 19.2977 22.0722 19.1193L22.0732 16.5162C22.0732 16.4306 22.04 16.3485 21.9811 16.2879C21.9223 16.2273 21.8421 16.1932 21.7587 16.1932H19.4081V14.6702C19.4081 13.9382 19.5779 13.5666 20.5062 13.5666L21.8527 13.5661C22.0262 13.5661 22.1668 13.4215 22.1668 13.2432V10.8261C22.1668 10.6481 22.0264 10.5036 21.853 10.5033Z\" fill=\"#22262F\"></path>\n                </svg>\n              </a>\n              <a href=\"https://t.me/gov4c_resmi\" target=\"_blank\">\n                <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <rect width=\"36\" height=\"36\" rx=\"8\" fill=\"white\"></rect>\n                  <path d=\"M16.3857 19.5717L16.1376 23.0617C16.4926 23.0617 16.6464 22.9092 16.8307 22.7261L18.4951 21.1355L21.9439 23.6611C22.5764 24.0136 23.022 23.828 23.1926 23.0792L25.4564 12.4718L25.457 12.4711C25.6576 11.5361 25.1189 11.1705 24.5026 11.3999L11.1964 16.4942C10.2882 16.8467 10.302 17.353 11.042 17.5824L14.4439 18.6405L22.3457 13.6961C22.7176 13.4499 23.0557 13.5861 22.7776 13.8324L16.3857 19.5717Z\" fill=\"#22262F\"></path>\n                </svg>\n              </a>\n              <a href=\"https://twitter.com/gov4c\" target=\"_blank\">\n                <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <rect width=\"36\" height=\"36\" rx=\"8\" fill=\"white\"></rect>\n                  <path d=\"M18 14.875C18 13.1562 19.4453 11.7266 21.1641 11.75C21.766 11.7569 22.3531 11.9376 22.8548 12.2702C23.3565 12.6028 23.7514 13.0733 23.9922 13.625H26.75L24.2266 16.1484C24.0637 18.6833 22.9416 21.0609 21.0884 22.798C19.2352 24.5351 16.7901 25.5012 14.25 25.5C11.75 25.5 11.125 24.5625 11.125 24.5625C11.125 24.5625 13.625 23.625 14.875 21.75C14.875 21.75 9.875 19.25 11.125 12.375C11.125 12.375 14.25 15.5 18 16.125V14.875Z\" fill=\"#22262F\"></path>\n                </svg>\n              </a>\n            </div>\n\n            <div className=\"call-center\">\n              <p className=\"lonely-call\">1414</p>\n              <div className=\"text\">\n                {/* Единый контакт-центр */}\n                {t(\"callCenter\")}\n\n                <br></br>\n                <span>\n                  {/* (Звонок бесплатный) */}\n                  {t(\"callFree\")}\n\n                </span>\n              </div>\n            </div>\n\n\n\n\n          </div>\n\n        </div>\n      </footer>\n    </>\n  );\n}\n\n\n","/home/erbulan/booking/src/Components/Application/Application.js",[],[],"/home/erbulan/booking/src/Components/Reservation/Reservaton.js",["208","209","210","211","212","213","214"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport reservePractice from '../../assets/images/reservePractice2.png'\nimport reserveTheory from '../../assets/images/reserveTheory2.png'\nimport { IoIosArrowBack } from 'react-icons/io'\nimport token, { setToken } from \"../../store/slices/token\";\n\nimport \"./Reservation.css\";\nimport { useDispatch } from \"react-redux\";\n\nconst Reservation = () => {\n\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  return (\n    <div className=\"offset_reservation py-5\">\n      <div className=\"d-flex w-100\">\n        <button className=\"btn_back\" onClick={() => navigate(-1)}>\n          <IoIosArrowBack />\n          {t(\"goBack\")}\n        </button>\n      </div>\n\n      <div className=\"d-flex flex-column pt-5 w-100 align-items-center justify-content-center \">\n        <Link className=\"link_btn_resev_exam\" to=\"/reservation/theory-exam\">\n          <img src={reserveTheory} className=\"w-25\" />\n          <p className=\"w-75 mx-5\" >\n            {/* Theory button */}\n            {t(\"btn_title_reservation_theory_exam\")}</p>\n        </Link>\n      </div>\n\n      <div className=\"d-flex flex-column pt-2  w-100 align-items-center justify-content-center \">\n        <Link className=\"link_btn_resev_exam\" to=\"/reservation/practice-exam\">\n          <img src={reservePractice} className=\"w-25\" />\n          <p className=\"w-75 mx-5\">\n            {/* Practice button */}\n            {t(\"btn_title_reservation_practice_exam\")}</p>\n        </Link>\n      </div>\n\n\n\n    </div>\n  );\n};\n\nexport default Reservation;\n","/home/erbulan/booking/src/Components/ResultExam/ResultExam.js",["215"],[],"import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\n\nimport ModalLoading from \"../Reservation/ModalLoading/ModalLoading\";\nimport { getUserByAppNumber } from \"../../helpers/ApiRequestList\";\n\nimport \"./ResultExam.css\";\nimport ModalNotFoundDT from \"../Modal/ModalNotFoundDT\";\n\nconst ResultExam = () => {\n  const [isloading, setIsLoading] = useState(false);\n  const [isDTFound,setisDTFound] = useState(false)\n \n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  //use hook form\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isDirty, isValid },\n  } = useForm({\n    mode: \"onChange\",\n    numberDT: \"\",\n  });\n\n  const searchDigitalTicket = async (data) => {\n    const response = await getUserByAppNumber(data.numberDT);\n    \n    const userDataStorage = sessionStorage.getItem(\"user\")\n\n    if(response.fields !== userDataStorage){\n      sessionStorage.setItem('user',JSON.stringify(response))\n    }\n    \n    if (response.find === false) {\n      setisDTFound(true)\n    } else {\n      setIsLoading(true);\n      setTimeout(() => {\n        navigate(\"/search-result-exam\");\n        setIsLoading(false);\n      }, 3000);\n    }\n\n    reset();\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <div className=\"offset_result_exam\">\n      <h4 className=\"text-center\">Введите номер ЦТ</h4>\n      <div className=\"d-flex align-items-center justify-content-center w-100 min-h-100 mt-5\">\n        <form\n          onSubmit={handleSubmit(searchDigitalTicket)}\n          className=\"d-flex flex-column w-100 align-items-center justify-content-center mt-2\"\n        >\n          <input\n            className=\"form-control w-50 input_res_exam\"\n            placeholder=\"Введите номер ЦТ\"\n            maxLength=\"12\"\n            minLength=\"12\"\n            type=\"text\"\n            name=\"numberDT\"\n            {...register(\"numberDT\", {\n              required: \"Введите номер цифрового талона\",\n              minLength: {\n                value: 12,\n                message: \"Введите валидный номер цифрового талона\",\n              },\n              maxLength: {\n                value: 12,\n                message: \"Введите валидный номер цифрового талона\",\n              },\n              pattern: {\n                value: /^[0-9]+$/,\n                message: \"Цифровой талон состоит только из цифр\",\n              },\n            })}\n          />\n          {errors?.numberDT && (\n            <p className=\"error_text text-danger my-2\">\n              {errors.numberDT.message}\n            </p>\n          )}\n          <div className=\"d-flex w-100 align-items-center justify-content-center my-5\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-success px-4 py-2\"\n              disabled={!isDirty || !isValid}\n            >\n              поиск\n            </button>\n          </div>\n        </form>\n      </div>\n      {isloading && <ModalLoading isLoading={isloading} />}\n      <ModalNotFoundDT isDTFound={isDTFound} setShow={setisDTFound}/>\n    </div>\n  );\n};\n\nexport default ResultExam;\n","/home/erbulan/booking/src/Components/TrafficRulesInstructions/TrafficRulesInstructions.js",[],[],"/home/erbulan/booking/src/Components/TicketTheoryExam/TicketTheoryExam.js",["216","217","218"],[],"import React, { useEffect, useState } from \"react\";\nimport html2pdf from \"html2pdf.js\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Trans } from 'react-i18next';\n\n\nexport default function TicketTheoryExam() {\n  const [user, setUser] = useState(null);\n  const [date, setDate] = useState(null);\n  const [time, setTime] = useState(null);\n  const [examId, setExamId] = useState(null);\n  const [appNumber, setAppNumber] = useState(null);\n  const [kpp, setKpp] = useState(null);\n  const [category, setCategory] = useState(null);\n  const [department, setDepartment] = useState(null);\n  const [address, setAddress] = useState(null);\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    const examId = sessionStorage.getItem(\"examId\");\n    setExamId(JSON.parse(examId));\n    const appNumber = sessionStorage.getItem(\"appNumber\");\n    setAppNumber(JSON.parse(appNumber));\n    const kpp = sessionStorage.getItem(\"kpp\");\n    setKpp(JSON.parse(kpp));\n    //GET INFO APPLICANT\n    const user = sessionStorage.getItem(\"user\");\n    setUser(JSON.parse(user));\n    //GET DATE EXAM APPLICANT ENROLLED\n    const date = sessionStorage.getItem(\"date\");;\n    setDate(JSON.parse(date));\n    const category = sessionStorage.getItem(\"category\");\n    setCategory(JSON.parse(category));\n    const department = sessionStorage.getItem(\"department\");\n    setDepartment(JSON.parse(department));\n\n    const address = sessionStorage.getItem(\"address\");\n    setAddress(JSON.parse(address));\n\n    //TRANSFORM TIME CUT SECONDS\n    const time = JSON.parse(date);\n    const [hours, minutes] = time.time.split(\":\");\n    const timeWithoutSeconds = `${hours}:${minutes}`;\n    setTime(timeWithoutSeconds)\n  }, []);\n\n  const downloadPdf = () => {\n    const content = document.getElementsByTagName('html')[0].cloneNode(true);\n    const btn = content.getElementsByClassName('btn btn-success')[0];\n    const header = content.getElementsByClassName('header_logo_lang')[0];\n    const lang = content.getElementsByClassName('form-select form-select-lg')[0];\n    const center = content.getElementsByTagName('center')[0];\n\n    center.removeChild(btn);\n    header.removeChild(lang);\n    html2pdf(content);\n  }\n\n  return (\n    <>\n      <div className=\"d-flex flex-column align-items-center mt-5\">\n        <div id=\"ticket\" className=\"d-flex flex-column h-50 w-75 border rounded border-dark p-4\">\n          <h3 className=\"text-center\">\n            {t(\"talonDigital\")}\n            {/* Цифровой талон №  */}\n            {appNumber}</h3>\n          <label className=\"my-2\">\n            <span className=\"ticket_text_aside\">\n              {t(\"iin\")}:&nbsp;\n              {/* ИИН:  */}\n              <span className=\"fw-bold\">{user?.iin}</span>\n            </span>\n            <span>{ }</span>\n          </label>\n\n          <label className=\"my-2\">\n            <span className=\"ticket_text_aside\">\n              {t(\"fullName\")}:&nbsp;\n              {/* ФИО:  */}\n              <span className=\"fw-bold\">{user?.fullname}</span>\n            </span>\n            <span>{ }</span>\n          </label>\n\n\n          <label className=\"my-2\">\n            <span className=\"ticket_text_aside\">\n              {t(\"department\")}:&nbsp;\n              {/* Отделение:  */}\n              <span className=\"fw-bold\">\n                <span className=\"fw-bold\">{department}</span>\n              </span>\n            </span>\n          </label>\n\n\n          <label className=\"my-2\">\n            <span className=\"ticket_text_aside\">\n              {t(\"talonServiceType\")}\n              {/* Тип услуги:  */}\n              <b>\n                {user?.serviceID === \"I03-21\" ? t(\"textTheory1\") : user?.serviceID === \"I03-22\" ? t(\"textTheory2\") :\n                  user?.serviceID === \"I03-22\" ? t(\"textTheory3\") : user?.serviceID === \"I10-1\" ? t(\"textTheory4\") : \"\"}\n              </b>\n              <span className=\"fw-bold\"></span>\n            </span>\n          </label>\n\n\n\n          <div className=\"my-2 w-100\">\n            <span className=\"ticket_text_aside text-wrap\">\n              {t(\"talonData\")}\n              {/* Дата: */}\n            </span>\n            <span className=\"fw-bold mx-2\">\n              {new Date(date?.date).toLocaleDateString()}\n            </span>\n          </div>\n\n          <div className=\"my-2 w-100\">\n            <span className=\"ticket_text_aside text-wrap\">\n              {t(\"talonTime\")}\n              {/* Время: */}\n            </span>\n            <span className=\"fw-bold mx-2\">{time}</span>\n          </div>\n\n          <div className=\"my-2 w-100\">\n            <span className=\"ticket_text_aside text-wrap\">\n              {t(\"talonAddress\")}\n              {/* Адрес: */}\n            </span>\n            <span className=\"fw-bold mx-2\">{address}</span>\n          </div>\n\n          <p className=\"text-center text-muted fw-bold mt-4\">\n            <Trans\n              i18nKey=\"talonNoteTheory\"\n              components={{\n                span: <span style={{ color: 'red' }} />\n              }}\n            />\n          </p>\n\n          {/* <p className=\"text-center text-muted\">\n            <a href=\"https://booking.gov4c.kz/\">https://booking.gov4c.kz/</a>\n          </p> */}\n\n\n          <p className=\"text-center text-danger\">\n            {t(\"talonSave\")}\n            {/* Сохраните этот талон */}\n          </p>\n        </div >\n      </div >\n      <br></br>\n      <center>\n        <button onClick={downloadPdf} type=\"button\" className=\"btn btn-success\">\n          {t(\"talonPDF\")}\n          {/* Скачать PDF */}\n\n        </button>\n      </center>\n    </>\n  );\n}\n","/home/erbulan/booking/src/Components/SearchResultExam/SearchResultExam.js",["219"],[],"import React, { useEffect, useState } from \"react\";\nimport { json, useNavigate } from \"react-router\";\n\nimport { FaUserAlt } from \"react-icons/fa\";\n\nimport { getDepartmentById } from \"../../helpers/ApiRequestList\";\n\nimport \"./SearchResultExam.css\";\n\nconst SearchResultExam = () => {\n  const [userData, setUserData] = useState(null);\n  const [department, setDepartment] = useState(null)\n\n  const navigate = useNavigate();\n  const handleCancel = () => {\n    navigate(-1);\n  };\n\n  const handleHomePage = () => {\n    navigate(\"/\");\n  };\n\n  const getDepartment = async (id) => {\n    const response = await getDepartmentById(id)\n    sessionStorage.setItem('departmentSearchResult', JSON.stringify(response))\n  }\n\n  useEffect(() => {\n    const userDataStorage = sessionStorage.getItem('user')\n    const res = JSON.parse(userDataStorage)[0]\n\n    setUserData(res)\n\n    getDepartment(res?.fields?.department)\n    const department = sessionStorage.getItem('departmentSearchResult')\n    setDepartment(JSON.parse(department))\n\n  }, [department])\n\n  return (\n    <main className=\"search_result_exam_offset\">\n      <div className=\"d-flex w-100 px-5 mt-5 justify-content-around\">\n        <div className=\"d-flex h-100 justify-content-center\">\n          <FaUserAlt className=\"icon\" />\n        </div>\n        <div className=\"d-flex flex-column w-50 align-items-start\">\n          <p className=\"ticket_text_aside\">\n            ФИО: <span className=\"text_data\">{userData?.fields?.fullname}</span>{\" \"}\n          </p>\n          <p className=\"ticket_text_aside\">\n            ИИН: <span className=\"text_data\">{userData?.fields?.iin}</span>\n          </p>\n          <p className=\"ticket_text_aside\">\n            Отделение: <span className=\"text_data\">{department?.name}</span>\n          </p>\n          <p className=\"ticket_text_aside\">\n            {/* Тип услуги: <span className=\"text_data\">{userData[0]?.fields?.service}</span> */}\n          </p>\n          <p className=\"ticket_text_aside\">\n            Дата и время для сдачи практического экзамена:{\" \"}\n            <span className=\"text_data\">\n              Дата и время для сдачи практического экзамена\n            </span>\n          </p>\n          <p className=\"ticket_text_aside\">\n            Статус ТЭ: <span className=\"text_data\">{userData?.fields?.statusT ? \"СДАН\" : \"НЕ СДАН\"}</span>\n          </p>\n          <p className=\"ticket_text_aside\">\n            Статус ТЭ: <span className=\"text_data\">{userData?.fields?.statusP ? \"СДАН\" : \"НЕ СДАН\"}</span>\n          </p>\n        </div>\n      </div>\n      <div className=\"d-flex w-100 align-items-center justify-content-center mt-5\">\n        <button className=\"btn btn-danger mx-2\" onClick={() => handleCancel()}>\n          Отмена\n        </button>\n        <button\n          className=\"btn btn-primary mx-2\"\n          onClick={() => handleHomePage()}\n        >\n          Главная страница\n        </button>\n      </div>\n    </main>\n  );\n};\n\nexport default SearchResultExam;\n","/home/erbulan/booking/src/Components/Reservation/PracticeExamPage/PracticeExamPage.js",["220","221","222","223","224","225","226","227","228"],[],"import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { getCurrentLanguage } from '/home/erbulan/booking/src/config/i18n.js';\n\n//COMPONENTS\nimport ModalLoading from \"../ModalLoading/ModalLoading\";\nimport PracticeExamForm from \"./PracticeExamForm\";\nimport ModalPracticeError from \"../../Modal/ModalPracticeError\";\nimport ModalCongratPractice from \"../../Modal/ModalCongratPractice\";\nimport ReactCountdownClock from \"react-countdown-clock\";\nimport ErrorVerifyPage from \"../../ErrorPage/ErrorVerifyPage\";\nimport ModalTheoryExam from \"../../Modal/ModalTheoryExam\";\nimport OTPInput, { ResendOTP } from \"otp-input-react\";\n\nimport ModalActiveTicket from \"../../Modal/ModalActiveTicket\";\n\n\n//REDUX\nimport { setDataUser } from \"../../../store/slices/userDataSlice\";\n\n//ICON\nimport { IoIosArrowBack } from \"react-icons/io\";\n\n//API REQUEST FUNCTION\nimport {\n  verifyUserByIIN,\n  verifySMSCode,\n} from \"../../../helpers/ApiRequestList\";\n\nconst PracticeExamPage = () => {\n  //USE TRANSLATE LANG\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  const [examData, setExamData] = useState(null);\n\n\n  //SHOW FORM SELECT DATE AND TIME FOR EXAM AFTER VERIFY APPLICANT\n  const [isVerify, setIsVerify] = useState(false);\n  //SHOW LOADING ANIMATION MODAL\n  const [isloading, setIsLoading] = useState(false);\n  //IF APPLICANT NOT FOUND SHOW ERROR\n  const [isUser, setIsUser] = useState(false);\n\n  //SHOW MODALS\n  const [congartModal, setCongartModal] = useState(false);\n  const [isTheoryResModal, setIsTheoryResModal] = useState(false);\n\n  //TOOGLE SHOW INPUT VERIFY CODE\n  const [messageBlock, setMessageBlock] = useState(false);\n  //SECONDS FOR TIMER\n  const [seconds, setSeconds] = useState(180);\n  //FOR DISABLED BUTTON IF TIMER OUT OF TIME\n  const [disBtn, setDisBtn] = useState(false);\n  //SHOW ERROR IF APPLICANT NOT PASS THEORY EXAM\n  const [notPassExam, setNotPassExam] = useState(false);\n  //SHOW ERROR IF APPLICANT INPUT WRONG VERIFY CODE\n  const [isWrongCode, setIsWrongCode] = useState(false);\n  const [isWrongIIN, setIsWrongIIN] = useState(false);\n  const [OTP, setOTP] = useState(\"\");\n\n  //show error if user has already active ticket\n  const [hasActiveTicket, setHasActiveTicket] = useState(false);\n\n  //bmgNote hide\n  const [isTextVisible, setIsTextVisible] = useState(true);\n\n  const token = useSelector(state => state.token.token)\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isDirty, isValid },\n  } = useForm({\n    IIN: \"\",\n    mode: \"onChange\",\n    message: \"\",\n  });\n\n  const dispatch = useDispatch();\n  const { btoa } = window;\n  //SEND IIN TO DATABASE TO VERIFY USER\n  const verifyUser = async (iin, token) => {\n    // try {\n    //   const response = await verifyUserByIIN(iin,token);\n\n    //   //APPLICANT FIND IN DATABASE\n    //   if (response.success) {\n    //     sessionStorage.setItem(\"iin\", JSON.stringify(iin));\n    //     //SHOW INPUT OTP TO VERIFY CODE\n    //     setMessageBlock(true);\n    //   }\n    //   //APLICANT NOT FOUND\n    //   else {\n    //     setMessageBlock(false)\n    //     //APPLICANT NOT FOUND ERROR\n    //     isUser(true);\n    //   }\n    // } catch (e) {\n    //   // navigate(\"/error-verify-page\");\n    // }\n\n    // var myHeaders = new Headers();\n    var requestOptions = {\n      method: 'GET', /*headers: myHeaders, */redirect: 'follow'\n    };\n    fetch(\"/api/verify/\" + iin + \"/\", requestOptions)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(`Request failed with status code ${response.status}`);\n        }\n      })\n      .then(result => {\n        if (result.success) {\n          sessionStorage.setItem(\"iin\", JSON.stringify(iin));\n          //SHOW INPUT OTP TO VERIFY CODE\n          setMessageBlock(true);\n        }\n        else if (result.error) {\n          setIsWrongIIN(true);\n        }\n        //APLICANT NOT FOUND\n        else {\n          setMessageBlock(false)\n          //APPLICANT NOT FOUND ERROR\n          isUser(true);\n        }\n      })\n      .catch(error => console.log('error', error));\n  };\n\n\n\n  //SEND SMS CODE FROM USER\n  const sendVerifyCodeApplicant = async (verify_code, token) => {\n    const url = \"/api/verify/\"\n\n    const storageData = sessionStorage.getItem(\"iin\");\n    const obj = {\n      \"iin\": JSON.parse(storageData),\n      \"code\": verify_code,\n    }\n\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    let raw = JSON.stringify({\n      iin: JSON.parse(storageData),\n      code: verify_code\n    });\n\n\n    fetch(url, {\n      headers: myHeaders,\n      method: \"POST\",\n      body: raw\n    }).then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n      else {\n        throw new Error(`INITIAL Request failed with status code ${response.status}`);\n      }\n    })\n      .then((data) => {\n        if (data.error) {\n          //SHOW ERROR IF APPLICANT NOT PASS THEORY EXAM\n          // setIsVerify(true)\n          if (data.error == \"У заявителя есть активные экзамены.\") { // assuming the server returns this data\n            if (data.exam_data) {\n              sessionStorage.setItem(\"exam_data\", JSON.stringify(data.exam_data));\n              setExamData(data.exam_data);\n              setHasActiveTicket(true);\n            }\n          } else {\n            setMessageBlock(false)\n            setNotPassExam(true);\n            setOTP(\"\");\n            //console.log(data.error);\n            // console.log(data)\n          }\n        }\n        //APLICANT INPUT WRONG VERIFY CODE\n        else if (data.success === false) {\n          //SHOW ERROR APPLICANT INPUT WRONG VERIFY CODE\n          setMessageBlock(true)\n          setIsWrongCode(true);\n          setOTP(\"\")\n          // console.log(2)\n        }\n        //OK\n        else {\n          //console.log(data);\n          setNotPassExam(false);\n          setIsVerify(true);\n          dispatch(setDataUser(data));\n          setMessageBlock(false)\n          setOTP(\"\")\n          // console.log(3)\n        }\n\n        // } \n      })\n    /*.catch(function (res) {\n      console.log(res,'\\texcept');\n      return res\n    });*/\n  };\n\n  // IF THE TIMER IS OUT OF TIME TOOGLE DISABLED BUTTON \"Забронировать\"\n  const timeDone = () => {\n    setDisBtn(true);\n  };\n\n  // SEND SMS CODE AGAIN\n  const SendMessageAgain = () => {\n    setDisBtn(false);\n    //RESTART TIMER\n    setSeconds((seconds) => (seconds += 10));\n    const storageData = sessionStorage.getItem(\"iin\");\n    verifyUser(JSON.parse(storageData));\n  };\n\n  //SUBMIT - SEND IIN AND GET VERIFY CODE\n  const getMessage = (data) => {\n    verifyUser(data.IIN, token.access);\n  };\n\n  //SEND SMS CODE FROM APPLICANT TO CHECK\n  const verifyOTP = () => {\n\n    sendVerifyCodeApplicant(OTP, token.access, getCurrentLanguage());\n    if (isVerify)\n      submit();\n  }\n  const submit = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n\n    setMessageBlock(false);\n    //sendVerifyCodeApplicant(OTP, token.access);\n    reset();\n  };\n\n  useEffect(() => {\n    //console.log(token.access)\n  }, [isVerify, seconds, notPassExam, OTP, token]);\n\n  return (\n    <div className=\"offset_theory_exam_page flex-column\">\n\n      <div className=\"d-flex w-100 mt-4\">\n        <button className=\"btn_back\" onClick={() => navigate(-1)}>\n          <IoIosArrowBack />\n          {t(\"goBack\")}\n        </button>\n      </div>\n\n      <div className=\"d-flex w-100 text-center flex-column mt-4\">\n        <h2>{t(\"titlePagePracticeExam\")}</h2>\n      </div>\n\n      <div className=\"d-flex w-100 text-start align-items-center justify-content-center\">\n        {!isVerify ? (\n          <form\n            className={messageBlock ? \"hide\" : \"form_input\"}\n            onSubmit={handleSubmit(getMessage)}\n          >\n            <p className=\"text-center mt-5\">{t(\"head_text_input\")}</p>\n            {/* INPUT TICKET */}\n            <input\n              className=\"form-control input_w my-2\"\n              placeholder={t(\"iin\")}\n              maxLength=\"12\"\n              minLength=\"12\"\n              name=\"IIN\"\n              {...register(\"IIN\", {\n                required: \"Введите ИИН\",\n                pattern: {\n                  value: /^[0-9]+$/,\n                  message: \"КОД состоит только из цифр\",\n                },\n              })}\n            />\n\n            {/* ERRORS FOR INPUT */}\n            {errors.IIN && <p className=\"text-danger\">{errors.message}</p>}\n\n            {/* ERROR NOT FOUND TICKTET */}\n            {isUser && (\n              <p className=\"text-danger my-2\">{t(\"notIINFound\")}</p>\n            )}\n            {isWrongIIN && <p className=\"text-danger fs-3\">{t(\"wrongIIN\")}</p>}\n\n            {/* ERROR IF USER BOOKIG FOR PRACTICE EXAM */}\n\n            {/* SUBMIT BUTTON */}\n            <button\n              className=\"btn btn-success btn_width my-3\"\n              type=\"submit\"\n              disabled={!isDirty || !isValid}\n              onClick={() => setIsTextVisible(false)}\n            >\n              {/* Авторизоваться */}\n              {t(\"btn_title_reservation\")}\n            </button>\n          </form>\n        ) : (\n          // SHOW FORM TO SELECT DATE AND TIME TO RESERVATION PRACTICE EXAM\n          <div className=\"d-flex w-100 text-start align-items-center justify-content-center\">\n            <PracticeExamForm />\n          </div>\n        )}\n\n\n      </div>\n\n      {/* {isTextVisible && (\n        <p className=\"text-center mt-3 text-muted\">\n          {t(\"bmgNote\")}\n        </p>\n      )} */}\n\n      {/* SHOW INPUT TO VERIFY CODE */}\n      {messageBlock && (\n        <div\n          className=\"d-flex flex-wrap flex-column align-items-center justify-content-center w-100 mt-3\"\n        // onSubmit={handleSubmit(submit)}\n        >\n          <p className=\"px-3 text-center\">\n            {/* Введите отправленный на ваш телефон номер код. */}\n            {t(\"enterOTP\")}\n          </p>\n\n          <OTPInput\n            value={OTP}\n            onChange={setOTP}\n            autoFocus\n            OTPLength={6}\n            otpType=\"number\"\n            maxTime={seconds}\n            disabled={seconds === 0}\n            inputStyles={{\n              border: \"1px solid green\",\n              width: \"44px\",\n              height: \"44px\",\n              fontSize: \"18px\",\n              borderRadius: \"8px\",\n            }}\n            focusStyle={{\n              border: \"1px solid green\",\n            }}\n          />\n\n          {/* ERROR APPLICANT NOT PASS THEORY EXAM */}\n          {/* {notPassExam && <h2 className=\"text-danger text-center\">Заявитель не сдал теоритический экзамен</h2>} */}\n\n          <h2 className=\"text-danger text-center\">{notPassExam}</h2>\n          {/* ERROR APPLICANT  */}\n          {isWrongCode && <p className=\"text-danger fs-3\">{t(\"wrongOTP\")}</p>}\n\n          <div className=\"d-flex flex-column w-50 align-items-center justify-content-center w-100 mt-3\">\n            <button\n              className=\"btn btn-success mb-5\"\n              type=\"button\"\n              onClick={verifyOTP}\n              disabled={disBtn || OTP.length < 6}\n            >\n\n              {/* Забронировать */}\n              {t(\"bron\")}\n            </button>\n            <button\n              className=\"btn mb-3 btn-light\"\n              onClick={() => SendMessageAgain()}\n              disabled={!disBtn}\n            >\n              {t(\"againOTP\")}\n            </button>\n            {/* COUNT DOWN TIMER */}\n            <ReactCountdownClock\n              seconds={seconds}\n              color=\"#6c757d\"\n              alpha={2}\n              size={48}\n              onComplete={timeDone}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* MODAL LOADING ANIMATE  */}\n      {isloading && <ModalLoading isLoading={isloading} />}\n\n      {/* SHOW MODAL ERROR */}\n      <ModalPracticeError\n        isTheoryResModal={isTheoryResModal}\n        setShow={setIsTheoryResModal}\n      />\n\n      {/* SHOW CONGRATULATION MODAL */}\n      <ModalCongratPractice\n        congartModal={congartModal}\n        setShow={setCongartModal}\n      />\n      <ModalTheoryExam notPassExam={notPassExam} setNotPassExam={setNotPassExam} />\n\n      {/* SHOW ACTIVE TICKET MODAL */}\n      <ModalActiveTicket\n        hasActiveTicket={hasActiveTicket}\n        setHasActiveTicket={setHasActiveTicket}\n        examData={examData} // Pass the examData prop here\n      />\n\n    </div>\n  );\n};\n\nexport default PracticeExamPage;","/home/erbulan/booking/src/Components/ErrorPage/ErrorPage.js",[],[],"/home/erbulan/booking/src/Components/ErrorPage/ErrorEnrollPage.js",[],[],"/home/erbulan/booking/src/Components/ErrorPage/ErrorVerifyPage.js",[],[],"/home/erbulan/booking/src/Components/TicketPracticeExam/TicketPracticeExam.js",["229","230"],[],"import React, { useEffect, useState } from \"react\";\nimport html2pdf from \"html2pdf.js\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Trans } from 'react-i18next';\n\n\nexport default function TicketPracticeExam() {\n  const [user, setUser] = useState(null);\n  const [date, setDate] = useState(null);\n  const [time, setTime] = useState(null);\n  const [examId, setExamId] = useState(null);\n  const [appNumber, setAppNumber] = useState(null);\n  const [kpp, setKpp] = useState(null);\n  const [category, setCategory] = useState(null);\n  const [department, setDepartment] = useState(null);\n  const [address, setAddress] = useState(null);\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    const examId = sessionStorage.getItem(\"examId\");\n    setExamId(JSON.parse(examId));\n    const appNumber = sessionStorage.getItem(\"appNumber\");\n    setAppNumber(JSON.parse(appNumber));\n    const kpp = sessionStorage.getItem(\"kpp\");\n    setKpp(JSON.parse(kpp));\n    //GET INFO APPLICANT\n    const user = sessionStorage.getItem(\"user\");\n    setUser(JSON.parse(user));\n    //GET DATE EXAM APPLICANT ENROLLED\n    const date = sessionStorage.getItem(\"date\");;\n    setDate(JSON.parse(date));\n    const category = sessionStorage.getItem(\"category\");\n    setCategory(JSON.parse(category));\n    const department = sessionStorage.getItem(\"department\");\n    setDepartment(JSON.parse(department));\n\n    const address = sessionStorage.getItem(\"address\");\n    setAddress(JSON.parse(address));\n\n    //TRANSFORM TIME CUT SECONDS\n    const time = JSON.parse(date);\n    const [hours, minutes] = time.time.split(\":\");\n    const timeWithoutSeconds = `${hours}:${minutes}`;\n    setTime(timeWithoutSeconds)\n  }, []);\n\n  const downloadPdf = () => {\n    const content = document.getElementsByTagName('html')[0].cloneNode(true);\n    const btn = content.getElementsByClassName('btn btn-success')[0];\n    const header = content.getElementsByClassName('header_logo_lang')[0];\n    const lang = content.getElementsByClassName('form-select form-select-lg')[0];\n    const center = content.getElementsByTagName('center')[0];\n\n    center.removeChild(btn);\n    header.removeChild(lang);\n    html2pdf(content);\n  }\n\n  return (\n    <>\n      <div className=\"d-flex flex-column align-items-center mt-5\">\n        <div id=\"ticket\" className=\"d-flex flex-column h-50 w-75 border rounded border-dark p-4\">\n          <h3 className=\"text-center\">\n            {t(\"talonDigital\")}\n            {/* Цифровой талон №  */}\n            {appNumber}</h3>\n          <label className=\"my-2\">\n            <span className=\"ticket_text_aside\">\n              {t(\"iin\")}:&nbsp;\n              {/* ИИН:  */}\n              <span className=\"fw-bold\">{user?.iin}</span>\n            </span>\n            <span>{ }</span>\n          </label>\n          <label className=\"my-2\">\n            <span className=\"ticket_text_aside\">\n              {t(\"department\")}:&nbsp;\n              {/* Отделение:  */}\n              <span className=\"fw-bold\">\n                <span className=\"fw-bold\">{department}</span>\n              </span>\n            </span>\n          </label>\n          <label className=\"my-2\">\n            <span className=\"ticket_text_aside\">\n              {t(\"category\")}:&nbsp;\n              {/* Категория:  */}\n              <span className=\"fw-bold\">\n                <span className=\"fw-bold\">{category}</span>\n              </span>\n            </span>\n          </label>\n          <label className=\"my-2\">\n            <span className=\"ticket_text_aside\">\n              КПП: <span className=\"fw-bold\">\n                <span className=\"fw-bold\">{kpp == \"MT\" ? \"МКПП\" : \"АКПП\"}</span>\n              </span>\n            </span>\n          </label>\n          <label className=\"my-2\">\n            <span className=\"ticket_text_aside\">\n              {t(\"talonServiceType\")}\n              {/* Тип услуги:  */}\n              <b>\n                {t(\"talonService\")}\n                {/* Первичное получение прав */}\n              </b>\n              <span className=\"fw-bold\"></span>\n            </span>\n            <span className=\"fw-bold\">{user?.service}</span>\n          </label>\n          <div className=\"my-2 w-100\">\n            <span className=\"ticket_text_aside text-wrap\">\n              {t(\"talonData\")}\n              {/* Дата: */}\n            </span>\n            <span className=\"fw-bold mx-2\">\n              {new Date(date?.date).toLocaleDateString()}\n            </span>\n          </div>\n\n          <div className=\"my-2 w-100\">\n            <span className=\"ticket_text_aside text-wrap\">\n              {t(\"talonTime\")}\n              {/* Время: */}\n            </span>\n            <span className=\"fw-bold mx-2\">{time}</span>\n          </div>\n\n          <div className=\"my-2 w-100\">\n            <span className=\"ticket_text_aside text-wrap\">\n              {t(\"talonAddress\")}\n              {/* Адрес: */}\n            </span>\n            <span className=\"fw-bold mx-2\">{address}</span>\n          </div>\n\n          <p className=\"text-center text-muted fw-bold mt-4\">\n            <Trans\n              i18nKey=\"talonNote\"\n              components={{\n                span: <span style={{ color: 'red' }} />\n              }}\n            />\n          </p>\n\n          {/* <p className=\"text-center text-muted\">\n            <a href=\"https://booking.gov4c.kz/\">https://booking.gov4c.kz/</a>\n          </p> */}\n\n\n          <p className=\"text-center text-danger\">\n            {t(\"talonSave\")}\n            {/* Сохраните этот талон */}\n          </p>\n        </div >\n      </div >\n      <br></br>\n      <center>\n        <button onClick={downloadPdf} type=\"button\" className=\"btn btn-success\">\n          {t(\"talonPDF\")}\n          {/* Скачать PDF */}\n\n        </button>\n      </center>\n    </>\n  );\n}\n","/home/erbulan/booking/src/Components/Reservation/TheoryExamPage/TheoryExamPage.js",["231","232","233","234","235","236","237","238","239","240"],[],"/home/erbulan/booking/src/store/slices/ReservationTheoryData.js",[],[],"/home/erbulan/booking/src/store/slices/userDataSlice.js",["241"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    isLoading: false,\n    userData: {},\n    error: \"Error\",\n\n};\n\nconst userData = createSlice({\n  name: \"userData\",\n  initialState,\n  reducers: {\n    setDataUser: (state,action) => {\n        const obj = JSON.stringify(action.payload)\n        sessionStorage.setItem(\"user\",obj)\n        const objStorage = sessionStorage.getItem('user')\n        state.userData = JSON.parse(objStorage)\n    }\n  },\n\n});\n\nexport const {setDataUser} = userData.actions\nexport default userData.reducer;\n","/home/erbulan/booking/src/store/slices/departmentDataSlice.js",[],[],"/home/erbulan/booking/src/store/slices/token.js",[],[],"/home/erbulan/booking/src/Components/Reservation/ModalLoading/ModalLoading.js",[],[],"/home/erbulan/booking/src/helpers/ApiRequestList.js",["242","243","244","245"],[],"const { btoa } = window;\nexport const getCitiesList = async () => {\n  const url = \"/api/cities/\";\n  const username = \"admin\";\n  const password = \"admin\";\n\n  // console.log(\"Basic \" + btoa(username + \":\" + password));\n\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Basic \" + btoa(username + \":\" + password),\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Headers\": \"Content-Type\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET,PATCH\",\n    },\n  });\n\n  const result = await response.json();\n  return result;\n};\n\n\n\nexport const getDepartmentList = async () => {\n  const url = \"/api/departments/\";\n  const username = \"admin\";\n  const password = \"admin\";\n\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Basic \" + btoa(username + \":\" + password),\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Headers\": \"Content-Type\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET,PATCH\",\n    },\n  });\n\n  const result = await response.json();\n  return result;\n};\n\n\nexport const getDepartmentById = async (id) => {\n  const url = \"api/departments/\"\n  const username = 'admin'\n  const password = 'admin'\n\n  const response = await fetch(url + id, {\n    headers: {\n      Authorization: \"Basic \" + btoa(username + \":\" + password),\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Headers\": \"Content-Type\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET,PATCH\",\n    },\n    method: \"GET\"\n  })\n\n  const result = await response.json()\n  return result;\n}\n\nexport const getExamDateById = async (id) => {\n  const username = \"admin\";\n  const password = \"admin\";\n\n  const response = await fetch(`/api/exams/${id}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Basic \" + btoa(username + \":\" + password),\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Headers\": \"Content-Type\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET,PATCH\",\n    },\n  });\n\n  const result = await response.json();\n  return result;\n};\n\n// export const getFreeExamPractice = async (id, categoryName, kpp) => {\n//   const username = \"admin\";\n//   const password = \"admin\";\n\n//   const obj = {\n//     department_id: id,\n//     category: categoryName,\n//     kpp: kpp,\n//   };\n\n//   fetch(`/api/practice/free/exams/`, {\n//     method: \"POST\",\n//     headers: {\n//       Authorization: \"Basic \" + btoa(username + \":\" + password),\n//       \"Access-Control-Allow-Origin\": \"*\",\n//       \"Access-Control-Allow-Headers\": \"Content-Type\",\n//       \"Content-Type\": \"application/json\",\n//       \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET,PATCH\",\n//     },\n//     body: JSON.stringify(obj),\n//   })\n//     .then((response) => {\n//       if (response.ok) {\n//         return response.json();\n//       } else {\n//         throw new Error(`Request failed with status code ${response.status}`);\n//       }\n//     })\n//     .then((data) => {\n//       return data;\n//     })\n//     .catch(function (res) {\n//       return res\n//     });\n// };\n\nexport const getUserByAppNumber = async (id) => {\n  const url = \"/api/search/applicant/\";\n  const username = \"admin\";\n  const password = \"admin\";\n\n  const response = await fetch(url + id, {\n    headers: {\n      Authorization: \"Basic \" + btoa(username + \":\" + password),\n      \"Access-Control-Allow-Headers\": \"Content-Type\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET,PATCH\",\n    },\n    method: \"GET\",\n  });\n\n  const result = response.json();\n\n  if (!response.ok) {\n    throw new Error(`Request failed with status code ${response.status}`);\n  }\n\n  return result;\n};\n\nexport const verifyUserByIIN = async (iin, token) => {\n  var myHeaders = new Headers(); myHeaders.append(\"Authorization\", \"Bearer \" + token);\n\n  var requestOptions = {\n    method: 'GET', headers: myHeaders, redirect: 'follow'\n  };\n  fetch(\"http://booking.gov4c.kz/api/verify/\" + iin, requestOptions)\n    .then(response => response.json)\n    .then(result => result)\n    .catch(error => error);\n}\n\n\n\nexport const verifySMSCode = async (obj) => {\n  const url = \"/api/verify/\"\n  const username = \"admin\"\n  const password = \"admin\"\n\n  fetch(url, {\n    header: {\n      Authorization: \"Basic \" + btoa(username + \":\" + password),\n      \"Accept\": \"application/json\",\n      \"Access-Control-Allow-Headers\": \"Content-Type\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET,PATCH\",\n    },\n    method: \"POST\",\n    body: JSON.stringify(obj),\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(`Request failed with status code ${response.status}`);\n    }\n  })\n    .then((data) => {\n      return data;\n    })\n    .catch(function (res) {\n      return res\n    });\n\n}\n","/home/erbulan/booking/src/Components/Modal/ModalNotFoundDT.js",[],[],"/home/erbulan/booking/src/Components/Modal/ModalPracticeError.js",["246","247"],[],"import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Link } from \"react-router-dom\";\n\nconst ModalPracticeError = ({isTheoryResModal,setShow}) => {\n  \n\n  const handleClose = () => setShow(false);\n\n  return (\n    <Modal show={isTheoryResModal} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Ошибка</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>Вы не прошли теоритический экзамен.</Modal.Body>\n    </Modal>\n  );\n};\n\nexport default ModalPracticeError;\n","/home/erbulan/booking/src/Components/Modal/ModalTheoryExam.js",[],[],"/home/erbulan/booking/src/Components/Modal/ModalCongratPractice.js",[],[],"/home/erbulan/booking/src/Components/Modal/ModalActiveTicket.js",[],[],"/home/erbulan/booking/src/Components/Reservation/UserDataView/UserDataView.js",[],[],"/home/erbulan/booking/src/Components/Reservation/TheoryExamPage/TheoryExamVerification.js",["248","249","250","251","252","253","254","255","256","257","258"],[],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\n\n\nfunction TheoryExamVerification() {\n    const [user, setUser] = useState(null);\n    const [date, setDate] = useState(null);\n    const [time, setTime] = useState(null);\n    const [examId, setExamId] = useState(null);\n    const [appNumber, setAppNumber] = useState(null);\n    const [kpp, setKpp] = useState(null);\n    const [category, setCategory] = useState(null);\n    const [department, setDepartment] = useState(null);\n    const [address, setAddress] = useState(null);\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n\n    //GET APPLICANT INFO FROM REDUX\n    const userData = useSelector((state) => state.userData.userData);\n    const [departmentId, setDepartmentId] = useState(userData.department_id);\n    //SELECTED KPP IF APPLICANT HAVE CATEGORY \"B\"\n    const [kppApp, setKPP] = useState(\"MT\");\n    //SET ERROR WHEN SEND DATA AND TIME FOR RESERVATION\n    const [errorText, setErrorText] = useState(\"\");\n    //SHOW ERROR IF APPLICANT NOT PASS THEORY EXAM\n    const [notTheoryExam, setNotTheoryExam] = useState(\"\");\n\n    //APPLICANT SELECTED DATE AND TIME SEND DATA\n    const handleSubmitTheoryExam = () => {\n        const obj = {\n            user_id: userData.id,\n            exam_id: examId,\n        };\n\n        postUserExamData(obj);\n    };\n\n    //POST DATA TO SERVER AFTER CHOISE APPLICANT DATE AND TIME\n    const postUserExamData = (user_exam_data) => {\n        const url = \"/api/t1/theory/enroll/queue/\";\n        const token = userData.token;\n        fetch(url, {\n            headers: {\n                Authorization: \"Bearer \" + token,\n                \"Content-Type\": \"application/json\",\n            },\n            method: \"POST\",\n            body: JSON.stringify(user_exam_data),\n        })\n            .then((response) => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    setErrorText(response.status);\n                    throw new Error(`Request failed with status code ${response.status}`);\n                }\n            })\n            .then((res) => {\n                //IF APPLICANT ENROLLED TO PRACTICE EXAM\n                if (res.enrolled) {\n                    sessionStorage.setItem(\"appNumber\", JSON.stringify(res.app_number));\n                    navigate(\"/reservation/theory-exam/ticket\");\n\n                }\n                //APPLICANT NOT ENRLLED GET ERROR FROM SERVER\n                else if (res.error) {\n                    setNotTheoryExam(res.error);\n                }\n            })\n            .catch(function (res) {\n                setErrorText(res);\n            });\n    };\n\n    useEffect(() => {\n        const examId = sessionStorage.getItem(\"examId\");\n        setExamId(JSON.parse(examId));\n        const appNumber = sessionStorage.getItem(\"appNumber\");\n        setAppNumber(JSON.parse(appNumber));\n        const kpp = sessionStorage.getItem(\"kpp\");\n        setKpp(JSON.parse(kpp));\n        const category = sessionStorage.getItem(\"category\");\n\n        setCategory(JSON.parse(category));\n        const department = sessionStorage.getItem(\"department\");\n\n        setDepartment(JSON.parse(department));\n        //GET INFO APPLICANT\n        const user = sessionStorage.getItem(\"user\");\n        setUser(JSON.parse(user));\n        //GET DATE EXAM APPLICANT ENROLLED\n        const date = sessionStorage.getItem(\"date\");;\n        setDate(JSON.parse(date));\n\n        if (date) {\n            const parsedDate = JSON.parse(date);\n            if (parsedDate && parsedDate.time) {\n                const [hours, minutes] = parsedDate.time.split(\":\");\n                const timeWithoutSeconds = `${hours}:${minutes}`;\n                setTime(timeWithoutSeconds);\n            }\n        }\n\n    }, []);\n\n    return (\n        <>\n            <div className=\"d-flex flex-column align-items-center mt-5\">\n                <div id=\"ticket\" className=\"d-flex flex-column p-4 width-50 border rounded border-dark mx-auto\">\n                    <h3 className=\"text-center\">\n                        {t(\"preliminaryInfo\")}\n                        {/* Предварительная информация*/}\n                    </h3>\n\n                    <label className=\"my-2\">\n                        <span className=\"ticket_text_aside\">\n                            {t(\"iin\")}:&nbsp;\n                            {/* ИИН:  */}\n                            <span className=\"fw-bold\">{user?.iin}</span>\n                        </span>\n                        <span>{ }</span>\n                    </label>\n\n                    <label className=\"my-2\">\n                        <span className=\"ticket_text_aside\">\n                            {t(\"fullName\")}:&nbsp;\n                            {/* ФИО:  */}\n                            <span className=\"fw-bold\">{user?.fullname}</span>\n                        </span>\n                        <span>{ }</span>\n                    </label>\n\n                    <label className=\"my-2\">\n                        <span className=\"ticket_text_aside\">\n                            {t(\"department\")}:&nbsp;\n                            {/* Отделение:  */}\n                            <span className=\"fw-bold\">\n                                <span className=\"fw-bold\">{department}</span>\n                            </span>\n                        </span>\n                    </label>\n\n                    <div className=\"my-2 w-100\">\n                        <span className=\"ticket_text_aside text-wrap\">\n                            {t(\"talonData\")}\n                            {/* Дата: */}\n                        </span>\n                        <span className=\"fw-bold mx-2\">\n                            {new Date(date?.date).toLocaleDateString()}\n                        </span>\n                    </div>\n\n                    <div className=\"my-2 w-100\">\n                        <span className=\"ticket_text_aside text-wrap\">\n                            {t(\"talonTime\")}\n                            {/* Время: */}\n                        </span>\n                        <span className=\"fw-bold mx-2\">{time}</span>\n                    </div>\n                </div>\n            </div >\n\n\n            <p className=\"h5 text-center text-danger my-4\">\n                <strong>\n                    {t(\"verificationNote\")}\n                </strong>\n            </p>\n\n            <center>\n                <button type=\"button\" className=\"btn btn-danger mb-4\" onClick={() => window.location.href = 'https://booking.gov4c.kz/'}>\n                    {t(\"verificationDecline\")}\n                    {/* Отменить */}\n                </button>\n\n                <br></br>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-success\"\n                    onClick={() => {\n                        handleSubmitTheoryExam();\n                    }}\n                >\n                    {t(\"verificationApprove\")}\n                    {/* Подтвердить */}\n                </button>\n            </center>\n        </>\n    );\n}\n\nexport default TheoryExamVerification;","/home/erbulan/booking/src/Components/Reservation/PracticeExamPage/PracticeExamVerification.js",["259","260","261","262","263","264","265","266"],[],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\n\n\nfunction PracticeExamVerification() {\n    const [user, setUser] = useState(null);\n    const [date, setDate] = useState(null);\n    const [time, setTime] = useState(null);\n    const [examId, setExamId] = useState(null);\n    const [appNumber, setAppNumber] = useState(null);\n    const [kpp, setKpp] = useState(null);\n    const [category, setCategory] = useState(null);\n    const [department, setDepartment] = useState(null);\n    const [address, setAddress] = useState(null);\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n\n    //GET APPLICANT INFO FROM REDUX\n    const userData = useSelector((state) => state.userData.userData);\n    const [departmentId, setDepartmentId] = useState(userData.department_id);\n    //SELECTED KPP IF APPLICANT HAVE CATEGORY \"B\"\n    const [kppApp, setKPP] = useState(\"MT\");\n    //SET ERROR WHEN SEND DATA AND TIME FOR RESERVATION\n    const [errorText, setErrorText] = useState(\"\");\n    //SHOW ERROR IF APPLICANT NOT PASS THEORY EXAM\n    const [notTheoryExam, setNotTheoryExam] = useState(\"\");\n\n    //APPLICANT SELECTED DATE AND TIME SEND DATA\n    const handleSubmitPracticeExam = () => {\n        const obj = {\n            user_id: userData.id,\n            exam_id: examId,\n            department_id: departmentId,\n            category: category,\n            kpp: kppApp,\n        };\n\n        postUserExamData(obj);\n    };\n\n    //POST DATA TO SERVER AFTER CHOISE APPLICANT DATE AND TIME\n    const postUserExamData = (user_exam_data) => {\n        const url = \"/api/practice/enroll/queue/\";\n        const token = userData.token;\n        fetch(url, {\n            headers: {\n                Authorization: \"Bearer \" + token,\n                \"Content-Type\": \"application/json\",\n            },\n            method: \"POST\",\n            body: JSON.stringify(user_exam_data),\n        })\n            .then((response) => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    setErrorText(response.status);\n                    throw new Error(`Request failed with status code ${response.status}`);\n                }\n            })\n            .then((res) => {\n                //IF APPLICANT ENROLLED TO PRACTICE EXAM\n                if (res.enrolled) {\n                    sessionStorage.setItem(\"appNumber\", JSON.stringify(res.app_number));\n                    navigate(\"/reservation/practice-exam/ticket\");\n\n                }\n                //APPLICANT NOT ENRLLED GET ERROR FROM SERVER\n                else if (res.error) {\n                    setNotTheoryExam(res.error);\n                }\n            })\n            .catch(function (res) {\n                setErrorText(res);\n            });\n    };\n\n    useEffect(() => {\n        const examId = sessionStorage.getItem(\"examId\");\n        setExamId(JSON.parse(examId));\n        const appNumber = sessionStorage.getItem(\"appNumber\");\n        setAppNumber(JSON.parse(appNumber));\n        const kpp = sessionStorage.getItem(\"kpp\");\n        setKpp(JSON.parse(kpp));\n        const category = sessionStorage.getItem(\"category\");\n        console.log('Category:', category); // Add this\n        setCategory(JSON.parse(category));\n        const department = sessionStorage.getItem(\"department\");\n        console.log('Department:', department); // And this\n        setDepartment(JSON.parse(department));\n        //GET INFO APPLICANT\n        const user = sessionStorage.getItem(\"user\");\n        setUser(JSON.parse(user));\n        //GET DATE EXAM APPLICANT ENROLLED\n        const date = sessionStorage.getItem(\"date\");;\n        setDate(JSON.parse(date));\n\n        if (date) {\n            const parsedDate = JSON.parse(date);\n            if (parsedDate && parsedDate.time) {\n                const [hours, minutes] = parsedDate.time.split(\":\");\n                const timeWithoutSeconds = `${hours}:${minutes}`;\n                setTime(timeWithoutSeconds);\n            }\n        }\n\n    }, []);\n\n    return (\n        <>\n            <div className=\"d-flex flex-column align-items-center mt-5\">\n                <div id=\"ticket\" className=\"d-flex flex-column p-4 width-50 border rounded border-dark mx-auto\">\n                    <h3 className=\"text-center\">\n                        {t(\"preliminaryInfo\")}\n                        {/* Предварительная информация*/}\n                    </h3>\n\n                    <label className=\"my-2\">\n                        <span className=\"ticket_text_aside\">\n                            {t(\"iin\")}:&nbsp;\n                            {/* ИИН:  */}\n                            <span className=\"fw-bold\">{user?.iin}</span>\n                        </span>\n                        <span>{ }</span>\n                    </label>\n\n                    <label className=\"my-2\">\n                        <span className=\"ticket_text_aside\">\n                            {t(\"department\")}:&nbsp;\n                            {/* Отделение:  */}\n                            <span className=\"fw-bold\">\n                                <span className=\"fw-bold\">{department}</span>\n                            </span>\n                        </span>\n                    </label>\n\n                    <label className=\"my-2\">\n                        <span className=\"ticket_text_aside\">\n                            {t(\"category\")}:&nbsp;\n                            {/* Категория:  */}\n                            <span className=\"fw-bold\">\n                                <span className=\"fw-bold\">{category}</span>\n                            </span>\n                        </span>\n                    </label>\n                    <label className=\"my-2\">\n                        <span className=\"ticket_text_aside\">\n                            КПП: <span className=\"fw-bold\">\n                                <span className=\"fw-bold\">{kpp == \"MT\" ? \"МКПП\" : \"АКПП\"}</span>\n                            </span>\n                        </span>\n                    </label>\n\n                    <div className=\"my-2 w-100\">\n                        <span className=\"ticket_text_aside text-wrap\">\n                            {t(\"talonData\")}\n                            {/* Дата: */}\n                        </span>\n                        <span className=\"fw-bold mx-2\">\n                            {new Date(date?.date).toLocaleDateString()}\n                        </span>\n                    </div>\n\n                    <div className=\"my-2 w-100\">\n                        <span className=\"ticket_text_aside text-wrap\">\n                            {t(\"talonTime\")}\n                            {/* Время: */}\n                        </span>\n                        <span className=\"fw-bold mx-2\">{time}</span>\n                    </div>\n\n                </div >\n            </div >\n\n            <p className=\"h5 text-center text-danger my-4\">\n                <strong>\n                    {t(\"verificationNote\")}\n                </strong>\n            </p>\n\n            <center>\n                <button type=\"button\" className=\"btn btn-danger mb-4\" onClick={() => window.location.href = 'https://booking.gov4c.kz/'}>\n                    {t(\"verificationDecline\")}\n                    {/* Отменить */}\n                </button>\n\n                <br></br>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-success\"\n                    onClick={() => {\n                        handleSubmitPracticeExam();\n                    }}\n                >\n                    {t(\"verificationApprove\")}\n                    {/* Подтвердить */}\n                </button>\n            </center>\n        </>\n    );\n}\n\nexport default PracticeExamVerification;","/home/erbulan/booking/src/Components/Reservation/TheoryExamPage/TheoryExamForm.js",["267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284"],[],"import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { setData } from \"../../../store/slices/ReservationTheoryData\";\n\nimport UserDataView2 from \"../UserDataView/UserDataView2\";\nimport ModalLoading from \"../ModalLoading/ModalLoading\";\nimport { setDataUser } from \"../../../store/slices/userDataSlice\";\nimport { useTranslation } from \"react-i18next\";\n\n\nconst TheoryExamForm = () => {\n  const { t } = useTranslation()\n  //LOADING ANIMATION\n  const [loading, setLoading] = useState(false);\n  //SET TODAY DATE FOR DATEPICKER\n  const [today, setToday] = useState(null);\n\n  //IF DATE IN THIS DAY NOT EXAMS\n  const [dateError, setDateError] = useState(false);\n  // DATE FREE EXAM LIST FOR PRACTICE\n  const [dateList, setDateList] = useState([]);\n  // APPLICANT SELECTED DATE\n  const [date, setDate] = useState(\"\");\n  //APPLICANT SELECTED TIME\n  const [time, setTime] = useState(null);\n  //SET EXAMID\n  const [examId, setExamId] = useState(null);\n  //SELECTED KPP IF APPLICANT HAVE CATEGORY \"B\"\n  const [kppApp, setKPP] = useState(\"MT\");\n  //SET ERROR WHEN SEND DATA AND TIME FOR RESERVATION\n  const [errorText, setErrorText] = useState(\"\");\n  //SHOW ERROR IF APPLICANT NOT PASS THEORY EXAM\n  const [notTheoryExam, setNotTheoryExam] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  //GET APPLICANT INFO FROM REDUX\n  const userData = useSelector((state) => state.userData.userData);\n  //NEW MENUS\n  const [cities, setCities] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  // const categories = ['A1', 'B1', 'A', 'B', 'C1', 'C', 'D1', 'D', 'BE', 'C1E', 'CE', 'D1E', 'DE'];\n  const [departmentId, setDepartmentId] = useState(userData.department_id);\n  const [category, setCategory] = useState(userData.category);\n  const [city, setCity] = useState(userData.city);\n  const [dateBlock, setDateBlock] = useState(false);\n  const [address, setAddress] = useState(userData.address);\n\n  const getExcludedSundays = () => {\n    const todayDate = new Date();\n    const excludedDates = [];\n\n    for (let i = 0; i < 365; i++) {\n      const currentDate = new Date(todayDate);\n      currentDate.setDate(currentDate.getDate() + i);\n\n      if (currentDate.getDay() === 0) { // Sunday\n        excludedDates.push(currentDate.toISOString().split('T')[0]);\n      }\n    }\n\n    return excludedDates;\n  };\n\n  const uniqueDatesWithTime = dateList.filter(\n    (item, index, self) =>\n      self.findIndex((date) => date.date === item.date) === index\n  );\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    selectCity: \"\",\n    selectAddress: \"\",\n    selectDate: \"\",\n    IIN: \"\",\n    mode: \"onChange\",\n  });\n\n  //SELECT CITY\n  const onChangeCity = (value) => {\n    setCity(value);\n    const filteredDepartments = departments.filter((department) => department.city == value);\n    if (filteredDepartments.length > 0) {\n      setDepartmentId(filteredDepartments[0].id);\n    }\n  }\n  //SELECT DEPARTMENT\n  const onChangeSelectDepartment = (value) => {\n    setDepartmentId(value);\n  }\n  //SELECT CATEGORY\n  const onChangeSelectCategory = (value) => {\n    setCategory(value);\n  }\n\n  //SHOW SELECTORS OF DATE AND TIME\n  const dateButtonClick = () => {\n\n    setDateBlock(true);\n    getFreeExamTheory();\n\n    document.getElementById('city-select').disabled = true;\n    document.getElementById('department-select').disabled = true;\n    document.getElementById('chooseDateBtn').style.display = 'none';\n  }\n\n  //SELECT DATE\n  const onChangeSelectDate = (value) => {\n    setDate(value);\n\n    const sortedTime = dateList.filter((item) => item.date.includes(value));\n\n    dispatch(setData(sortedTime));\n    setTime(sortedTime);\n  };\n\n  //SELECT TIME\n  const onChangeSelectTime = (value) => {\n    const obj = time.filter((item) => item.time.includes(value));\n\n    const timeObj = {\n      date: obj[0]?.date,\n      time: obj[0]?.time,\n    };\n\n    const obj1 = sessionStorage.getItem(\"date\");\n    if (obj1 === null) {\n      sessionStorage.setItem(\"date\", JSON.stringify(timeObj));\n    } else {\n      sessionStorage.setItem(\"date\", JSON.stringify(timeObj));\n    }\n    setExamId(obj[0]?.id);\n  };\n\n  //APPLICANT SELECTED DATE AND TIME SEND DATA\n  const handleSubmitTheoryExam = () => {\n    const obj = {\n      user_id: userData.id,\n      exam_id: examId,\n      department_id: departmentId,\n    };\n\n    postUserExamData(obj);\n    setLoading(true);\n    sessionStorage.setItem(\"examId\", JSON.stringify(examId));\n    const department = departments.find((department) => department.id == departmentId);\n    sessionStorage.setItem(\"department\", JSON.stringify(department.name));\n    sessionStorage.setItem(\"address\", JSON.stringify(department.address));\n\n    //LOADING ANIMATE\n    setTimeout(() => {\n      setLoading(false);\n    }, 500);\n    reset();\n  };\n\n  //fetches\n  // ===========NEW DROPDOWN MENU FUNCTIONS========================\n  //GET CITIES\n  const fetchCities = async () => {\n    const url = \"/api/cities/\";\n    const token = userData.token;\n    const response = await fetch(url, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    setCities(data);\n  };\n\n  // //GET DEPARTMENTS\n  const fetchDepartments = async () => {\n    const url = \"/api/t1/theory/departments/\";\n    const token = userData.token;\n    const response = await fetch(url, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    setDepartments(data);\n  };\n\n  const getFreeExamTheory = async () => {\n    const iin = sessionStorage.getItem(\"iin\").replace(/[^0-9]/g, \"\");\n    const department_id = departmentId;\n    const token = userData.token;\n    const url = `/api/t1/theory/exams/`;\n\n    try {\n      const response = await fetch(url + iin + \"/\" + department_id + \"/\", {\n        headers: {\n          Authorization: \"Bearer \" + token,\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.length === 0) {\n          setDateError(true);\n          setDateList(data);\n        } else {\n          setDateError(false);\n          setDateList(data);\n        }\n      } else {\n        throw new Error(`Request failed with status code ${response.status}`);\n      }\n    } catch (error) {\n      // Handle error\n      console.error(\"An error occurred:\", error);\n      // You can set a state to display an error message to the user\n      // setStateForError(\"An error occurred while fetching data.\");\n    }\n  };\n\n  const postUserExamData = (user_exam_data) => {\n    navigate(\"/reservation/theory-exam/verification\");\n  };\n\n  useEffect(() => {\n    const todayDate = new Date().toISOString().slice(0, 10);\n    setToday(todayDate);\n    fetchCities();\n    fetchDepartments();\n  }, []);\n  //END OF NEW MENU FUNCTIONS\n\n  //HTML\n\n  return (\n    <div className=\"form_input_date_item\">\n      {/* SHOW APPLICANT INFO */}\n      <div className=\"d-flex align-items-start justify-content-center form-control my-4 \">\n        <UserDataView2 />\n      </div>\n      <h2>{errorText}</h2>\n      {/* APPLICANT NOT PASS THEORY EXAM */}\n      {notTheoryExam.length !== 0 ? <h2>{notTheoryExam}</h2> : null}\n\n      <form className=\"fs-5\"\n        onSubmit={handleSubmit(handleSubmitTheoryExam)}\n      >\n        {/* ================SELECT CITY================ */}\n        <div class=\"form-group mb-3\">\n          <label for=\"city-select\">\n            {/*Выберите город*/}\n            {t(\"selectCity\")}\n          </label>\n          <select class=\"form-select\" id=\"city-select\" onChange={(e) => onChangeCity(e.target.value)}>\n            {cities.map((city) => (\n              <option key={city.id} value={city.id} selected={city.name == userData.city}>{city.name}</option>\n            ))}\n          </select>\n        </div>\n\n        {/* ================SELECT DEPARTMENT================ */}\n        <div class=\"form-group mb-3\">\n          <label for=\"department-select\">\n            {/*Выберите департамент*/}\n            {t(\"selectDepartment\")}\n\n          </label>\n          <select class=\"form-select\" id=\"department-select\" onChange={(e) => onChangeSelectDepartment(e.target.value)}>\n            <option selected disabled value=\"\">\n              {t(\"selectDepartment\")}\n            </option>\n            {departments\n              .filter((department) => department.city == document.getElementById('city-select').value)\n              .map((department) => (\n                <option\n                  key={department.id}\n                  value={department.id}\n                /*selected={department.id == userData.department_id}*/\n                >\n                  {department.name}\n                </option>\n              ))}\n\n          </select>\n        </div>\n\n        {/* ================SELECT CATEGORY================ */}\n\n        {/*Кнопка Выбрать дату*/}\n        <center>\n          <button\n            className=\"btn btn-success my-2\"\n            id=\"chooseDateBtn\"\n            type=\"button\"\n            onClick={dateButtonClick}\n          >\n            {/*Выбрать дату и время*/}\n            {t(\"selectDateButton\")}\n          </button>\n        </center>\n        {/* ===========ВЫБЕРИТЕ ДАТУ============== */}\n        {dateBlock && (\n          <div className=\"date\">\n            <div class=\"form-group mb-3\">\n              {/* SELECT DATE */}\n              <label for=\"date-picker\">{t(\"selectDateTitle\")}</label>\n              <select\n                id=\"date-picker\"\n                className=\"form-control form-group-lg form-select\"\n                {...register(\"selectDate\", { required: true })}\n                onChange={(e) => onChangeSelectDate(e.target.value)}\n              >\n                <option selected disabled value=\"\">\n                  {t(\"selectDate\")}\n                </option>\n\n                {uniqueDatesWithTime.map((item) => (\n                  <option\n                    key={item.id}\n                    value={item.date}\n                  >\n                    {item.date}\n                  </option>\n                ))}\n              </select>\n\n\n              {dateError ? (\n                <small class=\"text-danger\">\n                  {/* К сожалению на текущий день записи нет. */}\n                  {t(\"notFoundRecord\")}\n                </small>\n                // <p className=\"fs-5 my-2 text-danger\">К сожалению в текущий день нету записей</p>\n              ) : null}\n            </div>\n\n            {/* ================ВЫБЕРИТЕ ВРЕМЯ============== */}\n\n            <div class=\"form-group mb-5\">\n              {/* SELECT TIME */}\n              <label for=\"time-select\">{t(\"time\")}</label>\n              <select\n                id=\"time-select\"\n                className=\"form-select\"\n                {...register(\"selectTime\", { required: true })}\n                disabled={date === \"\" || time?.length === 0}\n                onChange={(e) => onChangeSelectTime(e.target.value)}\n              >\n                <option value=\"\">\n                  {/* Выберите время */}\n                  {t(\"selectTime\")}\n                </option>\n                {time?.map((time) => (\n                  <option key={time.id}>{time.time}</option>\n                ))}\n              </select>\n            </div>\n            <div class=\"form-group text-center\">\n              <button className=\"btn btn-danger mx-5\" onClick={() => navigate(-2)}>\n                {/* Отмена */}{t(\"cancel\")}</button>\n\n              <button\n                className=\"btn btn-success mx-5\"\n                type=\"submit\"\n                disabled={examId === null}\n\n              >{/* Подтвердить */} {t(\"approve\")}</button>\n            </div>\n\n            <p className=\"text-center mt-5\">\n              {t(\"smsNote\")}\n            </p>\n\n          </div>)\n        }\n      </form >\n      {loading && <ModalLoading isLoading={loading} />}\n    </div >\n  );\n};\n\nexport default TheoryExamForm;\n","/home/erbulan/booking/src/Components/Reservation/PracticeExamPage/PracticeExamForm.js",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299"],[],"import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { setData } from \"../../../store/slices/ReservationTheoryData\";\n\nimport UserDataView from \"../UserDataView/UserDataView\";\nimport ModalLoading from \"../ModalLoading/ModalLoading\";\nimport { setDataUser } from \"../../../store/slices/userDataSlice\";\nimport { useTranslation } from \"react-i18next\";\n\n\nconst PracticeExamForm = () => {\n  const { t } = useTranslation()\n  //LOADING ANIMATION\n  const [loading, setLoading] = useState(false);\n  //SET TODAY DATE FOR DATEPICKER\n  const [today, setToday] = useState(null);\n\n  //IF DATE IN THIS DAY NOT EXAMS\n  const [dateError, setDateError] = useState(false);\n  // DATE FREE EXAM LIST FOR PRACTICE\n  const [dateList, setDateList] = useState([]);\n  // APPLICANT SELECTED DATE\n  const [date, setDate] = useState(\"\");\n  //APPLICANT SELECTED TIME\n  const [time, setTime] = useState(null);\n  //SET EXAMID\n  const [examId, setExamId] = useState(null);\n  //SELECTED KPP IF APPLICANT HAVE CATEGORY \"B\"\n  const [kppApp, setKPP] = useState(\"MT\");\n  //SET ERROR WHEN SEND DATA AND TIME FOR RESERVATION\n  const [errorText, setErrorText] = useState(\"\");\n  //SHOW ERROR IF APPLICANT NOT PASS THEORY EXAM\n  const [notTheoryExam, setNotTheoryExam] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  //GET APPLICANT INFO FROM REDUX\n  const userData = useSelector((state) => state.userData.userData);\n  //NEW MENUS\n  const [cities, setCities] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const categories = ['A1', 'B1', 'A', 'B', 'C1', 'C', 'D1', 'D', 'BE', 'C1E', 'CE', 'D1E', 'DE'];\n  const [departmentId, setDepartmentId] = useState(userData.department_id);\n  const [category, setCategory] = useState(userData.category);\n  const [city, setCity] = useState(userData.city);\n  const [dateBlock, setDateBlock] = useState(false);\n  const [address, setAddress] = useState(userData.address);\n\n  const getExcludedSundays = () => {\n    const todayDate = new Date();\n    const excludedDates = [];\n\n    for (let i = 0; i < 365; i++) {\n      const currentDate = new Date(todayDate);\n      currentDate.setDate(currentDate.getDate() + i);\n\n      if (currentDate.getDay() === 0) { // Sunday\n        excludedDates.push(currentDate.toISOString().split('T')[0]);\n      }\n    }\n\n    return excludedDates;\n  };\n\n  const uniqueDatesWithTime = dateList.filter(\n    (item, index, self) =>\n      self.findIndex((date) => date.date === item.date) === index\n  );\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    selectCity: \"\",\n    selectAddress: \"\",\n    selectDate: \"\",\n    IIN: \"\",\n    mode: \"onChange\",\n  });\n\n  //SELECT CITY\n  const onChangeCity = (value) => {\n    setCity(value);\n    const filteredDepartments = departments.filter((department) => department.city == value);\n    if (filteredDepartments.length > 0) {\n      setDepartmentId(filteredDepartments[0].id);\n    }\n  }\n  //SELECT DEPARTMENT\n  const onChangeSelectDepartment = (value) => {\n    setDepartmentId(value);\n  }\n  //SELECT CATEGORY\n  const onChangeSelectCategory = (value) => {\n    setCategory(value);\n  }\n\n  //SELECT KPP\n  const onChangeSelectKPP = (value) => {\n    setKPP(value);\n    // Вызов функции getFreeExamPractice при выборе опции селектора \"AT\" или \"MT\"\n    // if (value === \"AT\" || value === \"MT\") {\n    //   getFreeExamPractice(value);\n    // }\n  };\n  //SHOW SELECTORS OF DATE AND TIME\n  const dateButtonClick = () => {\n    setDateBlock(true);\n    getFreeExamPractice(kppApp);\n    document.getElementById('category-select').disabled = true;\n    document.getElementById('city-select').disabled = true;\n    document.getElementById('department-select').disabled = true;\n    document.getElementById('chooseDateBtn').style.display = 'none';\n    if (document.getElementById('kpp-select')) {\n      document.getElementById('kpp-select').disabled = true;\n    }\n  }\n\n  //SELECT DATE\n  const onChangeSelectDate = (value) => {\n    setDate(value);\n\n    const sortedTime = dateList.filter((item) => item.date.includes(value));\n\n    dispatch(setData(sortedTime));\n    setTime(sortedTime);\n  };\n\n  //SELECT TIME\n  const onChangeSelectTime = (value) => {\n    const obj = time.filter((item) => item.time.includes(value));\n\n    const timeObj = {\n      date: obj[0]?.date,\n      time: obj[0]?.time,\n    };\n\n    const obj1 = sessionStorage.getItem(\"date\");\n    if (obj1 === null) {\n      sessionStorage.setItem(\"date\", JSON.stringify(timeObj));\n    } else {\n      sessionStorage.setItem(\"date\", JSON.stringify(timeObj));\n    }\n    setExamId(obj[0]?.id);\n  };\n\n  //APPLICANT SELECTED DATE AND TIME SEND DATA\n  const handleSubmitPracticeExam = () => {\n    const obj = {\n      user_id: userData.id,\n      exam_id: examId,\n      department_id: departmentId,\n      category: category,\n      kpp: kppApp,\n    };\n\n    postUserExamData(obj);\n    setLoading(true);\n    sessionStorage.setItem(\"examId\", JSON.stringify(examId));\n    sessionStorage.setItem(\"kpp\", JSON.stringify(kppApp));\n    sessionStorage.setItem(\"category\", JSON.stringify(category));\n    const department = departments.find((department) => department.id == departmentId);\n    sessionStorage.setItem(\"department\", JSON.stringify(department.name));\n    sessionStorage.setItem(\"address\", JSON.stringify(department.address));\n\n    //LOADING ANIMATE\n    setTimeout(() => {\n      setLoading(false);\n    }, 500);\n    reset();\n  };\n\n  //fetches\n  // ===========NEW DROPDOWN MENU FUNCTIONS========================\n  //GET CITIES\n  const fetchCities = async () => {\n    const url = \"/api/cities/\";\n    const token = userData.token;\n    const response = await fetch(url, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    setCities(data);\n  };\n\n  // //GET DEPARTMENTS\n  const fetchDepartments = async () => {\n    const url = \"/api/departments/\";\n    const token = userData.token;\n    const response = await fetch(url, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    setDepartments(data);\n  };\n\n  //GET FREE PRACTICE EXAM\n  const getFreeExamPractice = async (kpp) => {\n    const url = \"/api/practice/free/exams/\";\n    const iin = sessionStorage.getItem(\"iin\").replace(/[^0-9]/g, \"\");\n    const token = userData.token;\n    fetch(url, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        \"iin\": iin,\n        \"department_id\": departmentId,\n        \"category\": category,\n        \"kpp\": kpp,\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(`Request failed with status code ${response.status}`);\n        }\n      })\n      .then((data) => {\n        if (data.length === 0) {\n          setDateError(true);\n          setDateList(data);\n        } else {\n          setDateError(false);\n          setDateList(data);\n        }\n      })\n      .catch(function (res) { });\n  };\n\n  //POST DATA TO SERVER AFTER CHOISE APPLICANT DATE AND TIME\n  // const postUserExamData = (user_exam_data) => {\n  //   const url = \"/api/practice/enroll/queue/\";\n  //   const token = userData.token;\n  //   fetch(url, {\n  //     headers: {\n  //       Authorization: \"Bearer \" + token,\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     method: \"POST\",\n  //     body: JSON.stringify(user_exam_data),\n  //   })\n  //     .then((response) => {\n  //       if (response.ok) {\n  //         return response.json();\n  //       } else {\n  //         setErrorText(response.status);\n  //         throw new Error(`Request failed with status code ${response.status}`);\n  //       }\n  //     })\n  //     .then((res) => {\n  //       //IF APPLICANT ENROLLED TO PRACTICE EXAM\n  //       if (res.enrolled) {\n  //         sessionStorage.setItem(\"appNumber\", JSON.stringify(res.app_number));\n  //         // navigate(\"/reservation/practice-exam/ticket\");\n  //         navigate(\"/reservation/practice-exam/verification\");\n  //       }\n  //       //APPLICANT NOT ENRLLED GET ERROR FROM SERVER\n  //       else if (res.error) {\n  //         setNotTheoryExam(res.error);\n  //       }\n  //     })\n  //     .catch(function (res) {\n  //       setErrorText(res);\n  //     });\n  // };\n\n  const postUserExamData = (user_exam_data) => {\n    navigate(\"/reservation/practice-exam/verification\");\n  };\n\n  useEffect(() => {\n    const todayDate = new Date().toISOString().slice(0, 10);\n    setToday(todayDate);\n    //getFreeExamPractice(userData.department_code, token.access);\n    if (userData.category !== 'B') {\n      onChangeSelectKPP(\"MT\");\n    }\n    // Fetching data for dropdowns // NEW MENU FUNCTIONS\n    fetchCities();\n    fetchDepartments();\n  }, []);\n  //END OF NEW MENU FUNCTIONS\n\n  //HTML\n\n  return (\n    <div className=\"form_input_date_item\">\n      {/* SHOW APPLICANT INFO */}\n      <div className=\"d-flex align-items-start justify-content-center form-control my-4 \">\n        <UserDataView />\n      </div>\n      <h2>{errorText}</h2>\n      {/* APPLICANT NOT PASS THEORY EXAM */}\n      {notTheoryExam.length !== 0 ? <h2>{notTheoryExam}</h2> : null}\n\n      <form className=\"fs-5\"\n        onSubmit={handleSubmit(handleSubmitPracticeExam)}\n      >\n        {/* ================SELECT CITY================ */}\n        <div class=\"form-group mb-3\">\n          <label for=\"city-select\">\n            {/*Выберите город*/}\n            {t(\"selectCity\")}\n          </label>\n          <select class=\"form-select\" id=\"city-select\" onChange={(e) => onChangeCity(e.target.value)}>\n            {cities.map((city) => (\n              <option key={city.id} value={city.id} selected={city.name == userData.city}>{city.name}</option>\n            ))}\n          </select>\n        </div>\n\n        {/* ================SELECT DEPARTMENT================ */}\n        <div class=\"form-group mb-3\">\n          <label for=\"department-select\">\n            {/*Выберите департамент*/}\n            {t(\"selectDepartment\")}\n\n          </label>\n          <select class=\"form-select\" id=\"department-select\" onChange={(e) => onChangeSelectDepartment(e.target.value)}>\n            <option selected disabled value=\"\">\n              {t(\"selectDepartment\")}\n            </option>\n            {departments\n              .filter((department) => department.city == document.getElementById('city-select').value)\n              .map((department) => (\n                <option\n                  key={department.id}\n                  value={department.id}\n                /*selected={department.id == userData.department_id}*/\n                >\n                  {department.name}\n                </option>\n              ))}\n            {/*departments.map((department) => (\n              <option key={department.id} value={department.id} selected={department.id == userData.department_id}>{department.name}</option>\n            ))*/}\n          </select>\n        </div>\n\n        {/* ================SELECT CATEGORY================ */}\n\n        <div class=\"form-group mb-3\">\n          <label for=\"category-select\" className=\"fs-5\">\n            {/*Выберите категорию*/}\n            {t(\"selectCategory\")}\n          </label>\n          <select class=\"form-select\" id=\"category-select\" {...register(\"selectCategory\", { required: true })} onChange={(e) => onChangeSelectCategory(e.target.value)}>\n            {categories.map((category) => (\n              <option value={category} selected={category == userData.category}>{category}</option>\n            ))}\n          </select>\n          {/* <small class=\"text-danger fs-5\">\n            Предупреждение категория\n             {t(\"warningCategory\")} \n        </small> */}\n        </div>\n\n        {category === \"B\" && (<div class=\"form-group mb-3\">\n          <label for=\"kpp-select\" className=\"fs-5\">\n            {/* ВидКПП */}\n            {t(\"typeKPP\")}\n          </label>\n          <select class=\"form-select\" id=\"kpp-select\" onChange={(e) => onChangeSelectKPP(e.target.value)}>\n            {<option selected disabled value=\"MT\">\n              {/* Выберите КПП */}\n              {t(\"selectKPP\")}</option>}\n            <option value=\"MT\">Механика </option>\n            <option value=\"AT\">Автомат</option>\n          </select>\n\n          <small class=\"text-danger fs-5\">\n            {/*Пожалуйста, выберите указанный при регистрации вид КПП.*/}\n            {t(\"warningKPP\")}\n          </small>\n        </div>)\n        }\n\n        {/*Кнопка Выбрать дату*/}\n        <center>\n          <button\n            className=\"btn btn-success my-2\"\n            id=\"chooseDateBtn\"\n            type=\"button\"\n            onClick={dateButtonClick}\n          >\n            {/*Выбрать дату и время*/}\n            {t(\"selectDateButton\")}\n          </button>\n        </center>\n        {/* ===========ВЫБЕРИТЕ ДАТУ============== */}\n        {dateBlock && (\n          <div className=\"date\">\n            <div class=\"form-group mb-3\">\n              {/* SELECT DATE */}\n              <label for=\"date-picker\">{t(\"selectDateTitle\")}</label>\n              <select\n                id=\"date-picker\"\n                className=\"form-control form-group-lg form-select\"\n                {...register(\"selectDate\", { required: true })}\n                onChange={(e) => onChangeSelectDate(e.target.value)}\n              >\n                <option selected disabled value=\"\">\n                  {t(\"selectDate\")}\n                </option>\n\n                {uniqueDatesWithTime.map((item) => (\n                  <option\n                    key={item.id}\n                    value={item.date}\n                  >\n                    {item.date}\n                  </option>\n                ))}\n              </select>\n\n              {/* ERROR*/}\n              {/* {errors?.selectDate && ( */}\n              {/* // <small class=\"text-danger\"> */}\n              {/* Выберите дату*/}\n              {/* {t(\"selectDate\")} */}\n              {/* </small> */}\n              {/* // <p className=\"error_text text-danger my-2\">Выберите дату и время</p> */}\n              {/* // )} */}\n              {/* ERROR */}\n\n\n              {dateError ? (\n                <small class=\"text-danger\">\n                  {/* К сожалению на текущий день записи нет. */}\n                  {t(\"notFoundRecord\")}\n                </small>\n                // <p className=\"fs-5 my-2 text-danger\">К сожалению в текущий день нету записей</p>\n              ) : null}\n            </div>\n\n            {/* ================ВЫБЕРИТЕ ВРЕМЯ============== */}\n\n            <div class=\"form-group mb-5\">\n              {/* SELECT TIME */}\n              <label for=\"time-select\">{t(\"time\")}</label>\n              <select\n                id=\"time-select\"\n                className=\"form-select\"\n                {...register(\"selectTime\", { required: true })}\n                disabled={date === \"\" || time?.length === 0}\n                onChange={(e) => onChangeSelectTime(e.target.value)}\n              >\n                <option value=\"\">\n                  {/* Выберите время */}\n                  {t(\"selectTime\")}\n                </option>\n                {time?.map((time) => (\n                  <option key={time.id}>{time.time}</option>\n                ))}\n              </select>\n            </div>\n            <div class=\"form-group text-center\">\n              <button className=\"btn btn-danger mx-5\" onClick={() => navigate(-2)}>{/* Отмена */}{t(\"cancel\")}</button>\n\n\n              <button\n                className=\"btn btn-success mx-5\"\n                type=\"submit\"\n                disabled={examId === null}\n\n              >{/* Подтвердить */} {t(\"approve\")}</button>\n            </div>\n\n            <p className=\"text-center mt-5\">\n              {t(\"smsNote\")}\n            </p>\n\n          </div>)\n        }\n      </form >\n      {loading && <ModalLoading isLoading={loading} />}\n    </div >\n  );\n};\n\nexport default PracticeExamForm;\n","/home/erbulan/booking/src/Components/Modal/ModalAppNumberError.js",[],[],"/home/erbulan/booking/src/Components/Reservation/UserDataView/UserDataView2.js",[],[],{"ruleId":"300","severity":1,"message":"301","line":2,"column":28,"nodeType":"302","messageId":"303","endLine":2,"endColumn":29},{"ruleId":"300","severity":1,"message":"304","line":5,"column":8,"nodeType":"302","messageId":"303","endLine":5,"endColumn":16},{"ruleId":"305","severity":1,"message":"306","line":119,"column":15,"nodeType":"307","messageId":"308","endLine":119,"endColumn":77,"fix":"309"},{"ruleId":"305","severity":1,"message":"306","line":125,"column":15,"nodeType":"307","messageId":"308","endLine":125,"endColumn":72,"fix":"310"},{"ruleId":"305","severity":1,"message":"306","line":131,"column":15,"nodeType":"307","messageId":"308","endLine":131,"endColumn":66,"fix":"311"},{"ruleId":"305","severity":1,"message":"306","line":137,"column":15,"nodeType":"307","messageId":"308","endLine":137,"endColumn":67,"fix":"312"},{"ruleId":"300","severity":1,"message":"313","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"314","line":1,"column":28,"nodeType":"302","messageId":"303","endLine":1,"endColumn":36},{"ruleId":"300","severity":1,"message":"315","line":8,"column":8,"nodeType":"302","messageId":"303","endLine":8,"endColumn":13},{"ruleId":"300","severity":1,"message":"316","line":8,"column":17,"nodeType":"302","messageId":"303","endLine":8,"endColumn":25},{"ruleId":"300","severity":1,"message":"317","line":15,"column":9,"nodeType":"302","messageId":"303","endLine":15,"endColumn":17},{"ruleId":"318","severity":1,"message":"319","line":29,"column":11,"nodeType":"307","endLine":29,"endColumn":55},{"ruleId":"318","severity":1,"message":"319","line":38,"column":11,"nodeType":"307","endLine":38,"endColumn":57},{"ruleId":"300","severity":1,"message":"317","line":18,"column":9,"nodeType":"302","messageId":"303","endLine":18,"endColumn":17},{"ruleId":"300","severity":1,"message":"320","line":12,"column":10,"nodeType":"302","messageId":"303","endLine":12,"endColumn":16},{"ruleId":"300","severity":1,"message":"321","line":14,"column":10,"nodeType":"302","messageId":"303","endLine":14,"endColumn":13},{"ruleId":"300","severity":1,"message":"322","line":15,"column":10,"nodeType":"302","messageId":"303","endLine":15,"endColumn":18},{"ruleId":"300","severity":1,"message":"323","line":2,"column":10,"nodeType":"302","messageId":"303","endLine":2,"endColumn":14},{"ruleId":"300","severity":1,"message":"324","line":14,"column":8,"nodeType":"302","messageId":"303","endLine":14,"endColumn":23},{"ruleId":"300","severity":1,"message":"325","line":16,"column":20,"nodeType":"302","messageId":"303","endLine":16,"endColumn":29},{"ruleId":"300","severity":1,"message":"326","line":29,"column":3,"nodeType":"302","messageId":"303","endLine":29,"endColumn":18},{"ruleId":"300","severity":1,"message":"327","line":30,"column":3,"nodeType":"302","messageId":"303","endLine":30,"endColumn":16},{"ruleId":"300","severity":1,"message":"328","line":46,"column":18,"nodeType":"302","messageId":"303","endLine":46,"endColumn":27},{"ruleId":"300","severity":1,"message":"329","line":69,"column":10,"nodeType":"302","messageId":"303","endLine":69,"endColumn":23},{"ruleId":"300","severity":1,"message":"330","line":85,"column":11,"nodeType":"302","messageId":"303","endLine":85,"endColumn":15},{"ruleId":"300","severity":1,"message":"331","line":145,"column":11,"nodeType":"302","messageId":"303","endLine":145,"endColumn":14},{"ruleId":"332","severity":1,"message":"333","line":175,"column":26,"nodeType":"334","messageId":"335","endLine":175,"endColumn":28},{"ruleId":"300","severity":1,"message":"320","line":12,"column":10,"nodeType":"302","messageId":"303","endLine":12,"endColumn":16},{"ruleId":"332","severity":1,"message":"333","line":97,"column":48,"nodeType":"334","messageId":"335","endLine":97,"endColumn":50},{"ruleId":"300","severity":1,"message":"324","line":12,"column":8,"nodeType":"302","messageId":"303","endLine":12,"endColumn":23},{"ruleId":"300","severity":1,"message":"325","line":14,"column":20,"nodeType":"302","messageId":"303","endLine":14,"endColumn":29},{"ruleId":"300","severity":1,"message":"326","line":27,"column":3,"nodeType":"302","messageId":"303","endLine":27,"endColumn":18},{"ruleId":"300","severity":1,"message":"327","line":28,"column":3,"nodeType":"302","messageId":"303","endLine":28,"endColumn":16},{"ruleId":"300","severity":1,"message":"328","line":42,"column":18,"nodeType":"302","messageId":"303","endLine":42,"endColumn":27},{"ruleId":"300","severity":1,"message":"329","line":70,"column":10,"nodeType":"302","messageId":"303","endLine":70,"endColumn":23},{"ruleId":"300","severity":1,"message":"330","line":87,"column":11,"nodeType":"302","messageId":"303","endLine":87,"endColumn":15},{"ruleId":"300","severity":1,"message":"331","line":137,"column":11,"nodeType":"302","messageId":"303","endLine":137,"endColumn":14},{"ruleId":"332","severity":1,"message":"333","line":169,"column":26,"nodeType":"334","messageId":"335","endLine":169,"endColumn":28},{"ruleId":"332","severity":1,"message":"333","line":177,"column":28,"nodeType":"334","messageId":"335","endLine":177,"endColumn":30},{"ruleId":"300","severity":1,"message":"336","line":1,"column":23,"nodeType":"302","messageId":"303","endLine":1,"endColumn":39},{"ruleId":"337","severity":1,"message":"338","line":15,"column":7,"nodeType":"339","messageId":"335","endLine":15,"endColumn":36},{"ruleId":"337","severity":1,"message":"338","line":38,"column":7,"nodeType":"339","messageId":"335","endLine":38,"endColumn":36},{"ruleId":"337","severity":1,"message":"338","line":59,"column":7,"nodeType":"339","messageId":"335","endLine":59,"endColumn":36},{"ruleId":"337","severity":1,"message":"338","line":80,"column":7,"nodeType":"339","messageId":"335","endLine":80,"endColumn":36},{"ruleId":"300","severity":1,"message":"340","line":2,"column":8,"nodeType":"302","messageId":"303","endLine":2,"endColumn":14},{"ruleId":"300","severity":1,"message":"341","line":4,"column":10,"nodeType":"302","messageId":"303","endLine":4,"endColumn":14},{"ruleId":"300","severity":1,"message":"342","line":12,"column":12,"nodeType":"302","messageId":"303","endLine":12,"endColumn":21},{"ruleId":"300","severity":1,"message":"321","line":13,"column":12,"nodeType":"302","messageId":"303","endLine":13,"endColumn":15},{"ruleId":"300","severity":1,"message":"322","line":14,"column":12,"nodeType":"302","messageId":"303","endLine":14,"endColumn":20},{"ruleId":"300","severity":1,"message":"343","line":16,"column":12,"nodeType":"302","messageId":"303","endLine":16,"endColumn":19},{"ruleId":"300","severity":1,"message":"344","line":16,"column":21,"nodeType":"302","messageId":"303","endLine":16,"endColumn":31},{"ruleId":"300","severity":1,"message":"345","line":22,"column":12,"nodeType":"302","messageId":"303","endLine":22,"endColumn":24},{"ruleId":"300","severity":1,"message":"346","line":22,"column":26,"nodeType":"302","messageId":"303","endLine":22,"endColumn":41},{"ruleId":"300","severity":1,"message":"347","line":24,"column":12,"nodeType":"302","messageId":"303","endLine":24,"endColumn":18},{"ruleId":"300","severity":1,"message":"348","line":24,"column":20,"nodeType":"302","messageId":"303","endLine":24,"endColumn":26},{"ruleId":"300","severity":1,"message":"349","line":26,"column":12,"nodeType":"302","messageId":"303","endLine":26,"endColumn":21},{"ruleId":"300","severity":1,"message":"350","line":28,"column":12,"nodeType":"302","messageId":"303","endLine":28,"endColumn":25},{"ruleId":"300","severity":1,"message":"342","line":12,"column":12,"nodeType":"302","messageId":"303","endLine":12,"endColumn":21},{"ruleId":"300","severity":1,"message":"343","line":16,"column":12,"nodeType":"302","messageId":"303","endLine":16,"endColumn":19},{"ruleId":"300","severity":1,"message":"344","line":16,"column":21,"nodeType":"302","messageId":"303","endLine":16,"endColumn":31},{"ruleId":"300","severity":1,"message":"346","line":22,"column":26,"nodeType":"302","messageId":"303","endLine":22,"endColumn":41},{"ruleId":"300","severity":1,"message":"348","line":24,"column":20,"nodeType":"302","messageId":"303","endLine":24,"endColumn":26},{"ruleId":"300","severity":1,"message":"349","line":26,"column":12,"nodeType":"302","messageId":"303","endLine":26,"endColumn":21},{"ruleId":"300","severity":1,"message":"350","line":28,"column":12,"nodeType":"302","messageId":"303","endLine":28,"endColumn":25},{"ruleId":"332","severity":1,"message":"333","line":151,"column":64,"nodeType":"334","messageId":"335","endLine":151,"endColumn":66},{"ruleId":"300","severity":1,"message":"351","line":10,"column":10,"nodeType":"302","messageId":"303","endLine":10,"endColumn":21},{"ruleId":"300","severity":1,"message":"352","line":19,"column":10,"nodeType":"302","messageId":"303","endLine":19,"endColumn":15},{"ruleId":"300","severity":1,"message":"347","line":32,"column":10,"nodeType":"302","messageId":"303","endLine":32,"endColumn":16},{"ruleId":"300","severity":1,"message":"348","line":32,"column":18,"nodeType":"302","messageId":"303","endLine":32,"endColumn":24},{"ruleId":"300","severity":1,"message":"353","line":34,"column":21,"nodeType":"302","messageId":"303","endLine":34,"endColumn":33},{"ruleId":"300","severity":1,"message":"354","line":36,"column":25,"nodeType":"302","messageId":"303","endLine":36,"endColumn":41},{"ruleId":"300","severity":1,"message":"322","line":47,"column":10,"nodeType":"302","messageId":"303","endLine":47,"endColumn":18},{"ruleId":"300","severity":1,"message":"355","line":48,"column":10,"nodeType":"302","messageId":"303","endLine":48,"endColumn":14},{"ruleId":"300","severity":1,"message":"343","line":50,"column":10,"nodeType":"302","messageId":"303","endLine":50,"endColumn":17},{"ruleId":"300","severity":1,"message":"344","line":50,"column":19,"nodeType":"302","messageId":"303","endLine":50,"endColumn":29},{"ruleId":"300","severity":1,"message":"356","line":52,"column":9,"nodeType":"302","messageId":"303","endLine":52,"endColumn":27},{"ruleId":"300","severity":1,"message":"357","line":77,"column":18,"nodeType":"302","messageId":"303","endLine":77,"endColumn":24},{"ruleId":"332","severity":1,"message":"333","line":89,"column":84,"nodeType":"334","messageId":"335","endLine":89,"endColumn":86},{"ruleId":"300","severity":1,"message":"358","line":99,"column":9,"nodeType":"302","messageId":"303","endLine":99,"endColumn":31},{"ruleId":"332","severity":1,"message":"333","line":153,"column":71,"nodeType":"334","messageId":"335","endLine":153,"endColumn":73},{"ruleId":"359","severity":1,"message":"360","line":237,"column":6,"nodeType":"361","endLine":237,"endColumn":8,"suggestions":"362"},{"ruleId":"332","severity":1,"message":"333","line":263,"column":73,"nodeType":"334","messageId":"335","endLine":263,"endColumn":75},{"ruleId":"332","severity":1,"message":"333","line":280,"column":55,"nodeType":"334","messageId":"335","endLine":280,"endColumn":57},{"ruleId":"300","severity":1,"message":"351","line":10,"column":10,"nodeType":"302","messageId":"303","endLine":10,"endColumn":21},{"ruleId":"300","severity":1,"message":"352","line":19,"column":10,"nodeType":"302","messageId":"303","endLine":19,"endColumn":15},{"ruleId":"300","severity":1,"message":"353","line":34,"column":21,"nodeType":"302","messageId":"303","endLine":34,"endColumn":33},{"ruleId":"300","severity":1,"message":"354","line":36,"column":25,"nodeType":"302","messageId":"303","endLine":36,"endColumn":41},{"ruleId":"300","severity":1,"message":"355","line":48,"column":10,"nodeType":"302","messageId":"303","endLine":48,"endColumn":14},{"ruleId":"300","severity":1,"message":"343","line":50,"column":10,"nodeType":"302","messageId":"303","endLine":50,"endColumn":17},{"ruleId":"300","severity":1,"message":"344","line":50,"column":19,"nodeType":"302","messageId":"303","endLine":50,"endColumn":29},{"ruleId":"300","severity":1,"message":"356","line":52,"column":9,"nodeType":"302","messageId":"303","endLine":52,"endColumn":27},{"ruleId":"300","severity":1,"message":"357","line":77,"column":18,"nodeType":"302","messageId":"303","endLine":77,"endColumn":24},{"ruleId":"332","severity":1,"message":"333","line":89,"column":84,"nodeType":"334","messageId":"335","endLine":89,"endColumn":86},{"ruleId":"332","severity":1,"message":"333","line":167,"column":71,"nodeType":"334","messageId":"335","endLine":167,"endColumn":73},{"ruleId":"359","severity":1,"message":"363","line":296,"column":6,"nodeType":"361","endLine":296,"endColumn":8,"suggestions":"364"},{"ruleId":"332","severity":1,"message":"333","line":322,"column":73,"nodeType":"334","messageId":"335","endLine":322,"endColumn":75},{"ruleId":"332","severity":1,"message":"333","line":339,"column":55,"nodeType":"334","messageId":"335","endLine":339,"endColumn":57},{"ruleId":"332","severity":1,"message":"333","line":364,"column":59,"nodeType":"334","messageId":"335","endLine":364,"endColumn":61},"no-unused-vars","'i' is defined but never used.","Identifier","unusedVar","'res_exam' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"365","text":"366"},{"range":"367","text":"366"},{"range":"368","text":"366"},{"range":"369","text":"366"},"'useEffect' is defined but never used.","'useState' is defined but never used.","'token' is defined but never used.","'setToken' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'examId' is assigned a value but never used.","'kpp' is assigned a value but never used.","'category' is assigned a value but never used.","'json' is defined but never used.","'ErrorVerifyPage' is defined but never used.","'ResendOTP' is defined but never used.","'verifyUserByIIN' is defined but never used.","'verifySMSCode' is defined but never used.","'setIsUser' is assigned a value but never used.","'isTextVisible' is assigned a value but never used.","'btoa' is assigned a value but never used.","'obj' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createAsyncThunk' is defined but never used.","no-dupe-keys","Duplicate key 'Access-Control-Allow-Origin'.","ObjectExpression","'Button' is defined but never used.","'Link' is defined but never used.","'appNumber' is assigned a value but never used.","'address' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'departmentId' is assigned a value but never used.","'setDepartmentId' is assigned a value but never used.","'kppApp' is assigned a value but never used.","'setKPP' is assigned a value but never used.","'errorText' is assigned a value but never used.","'notTheoryExam' is assigned a value but never used.","'setDataUser' is defined but never used.","'today' is assigned a value but never used.","'setErrorText' is assigned a value but never used.","'setNotTheoryExam' is assigned a value but never used.","'city' is assigned a value but never used.","'getExcludedSundays' is assigned a value but never used.","'errors' is assigned a value but never used.","'onChangeSelectCategory' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCities' and 'fetchDepartments'. Either include them or remove the dependency array.","ArrayExpression",["370"],"React Hook useEffect has missing dependencies: 'fetchCities', 'fetchDepartments', and 'userData.category'. Either include them or remove the dependency array.",["371"],[4123,4123]," rel=\"noreferrer\"",[5721,5721],[6739,6739],[7482,7482],{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},"Update the dependencies array to be: [fetchCities, fetchDepartments]",{"range":"376","text":"377"},"Update the dependencies array to be: [fetchCities, fetchDepartments, userData.category]",{"range":"378","text":"379"},[7060,7062],"[fetchCities, fetchDepartments]",[9080,9082],"[fetchCities, fetchDepartments, userData.category]"]